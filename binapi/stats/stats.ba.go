// Code generated by GoVPP binapi-generator. DO NOT EDIT.
//  source: binapi/stats.api.json

/*
 Package stats is a generated from VPP binary API module 'stats'.

 It contains following objects:
	 42 messages
	 14 types
	  1 alias
	 15 services

*/
package stats

import "git.fd.io/govpp.git/api"
import "github.com/lunixbochs/struc"
import "bytes"

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = struc.Pack
var _ = bytes.NewBuffer

// Services represents VPP binary API services:
//
//	"services": {
//	    "want_ip4_fib_stats": {
//	        "reply": "want_ip4_fib_stats_reply",
//	        "events": [
//	            "vnet_ip4_fib_counters"
//	        ]
//	    },
//	    "want_ip6_fib_stats": {
//	        "reply": "want_ip6_fib_stats_reply",
//	        "events": [
//	            "vnet_ip6_fib_counters"
//	        ]
//	    },
//	    "want_stats": {
//	        "reply": "want_stats_reply"
//	    },
//	    "want_interface_simple_stats": {
//	        "reply": "want_interface_simple_stats_reply",
//	        "events": [
//	            "vnet_interface_simple_counters"
//	        ]
//	    },
//	    "stats_get_poller_delay": {
//	        "reply": "stats_get_poller_delay_reply"
//	    },
//	    "want_per_interface_combined_stats": {
//	        "reply": "want_per_interface_combined_stats_reply",
//	        "events": [
//	            "vnet_per_interface_combined_counters"
//	        ]
//	    },
//	    "vnet_get_summary_stats": {
//	        "reply": "vnet_get_summary_stats_reply"
//	    },
//	    "want_bier_neighbor_stats": {
//	        "reply": "want_bier_neighbor_stats_reply",
//	        "events": [
//	            "vnet_bier_neighbor_counters"
//	        ]
//	    },
//	    "want_udp_encap_stats": {
//	        "reply": "want_udp_encap_stats_reply",
//	        "events": [
//	            "vnet_udp_encap_counters"
//	        ]
//	    },
//	    "want_ip6_nbr_stats": {
//	        "reply": "want_ip6_nbr_stats_reply",
//	        "events": [
//	            "vnet_ip6_nbr_counters"
//	        ]
//	    },
//	    "want_ip4_mfib_stats": {
//	        "reply": "want_ip4_mfib_stats_reply",
//	        "events": [
//	            "vnet_ip4_mfib_counters"
//	        ]
//	    },
//	    "want_ip6_mfib_stats": {
//	        "reply": "want_ip6_mfib_stats_reply",
//	        "events": [
//	            "vnet_ip6_mfib_counters"
//	        ]
//	    },
//	    "want_per_interface_simple_stats": {
//	        "reply": "want_per_interface_simple_stats_reply",
//	        "events": [
//	            "vnet_per_interface_simple_counters"
//	        ]
//	    },
//	    "want_interface_combined_stats": {
//	        "reply": "want_interface_combined_stats_reply",
//	        "events": [
//	            "vnet_interface_combined_counters"
//	        ]
//	    },
//	    "want_ip4_nbr_stats": {
//	        "reply": "want_ip4_nbr_stats_reply",
//	        "events": [
//	            "vnet_ip4_nbr_counters"
//	        ]
//	    }
//	},
//
type Services interface {
	StatsGetPollerDelay(*StatsGetPollerDelay) (*StatsGetPollerDelayReply, error)
	VnetGetSummaryStats(*VnetGetSummaryStats) (*VnetGetSummaryStatsReply, error)
	WantBierNeighborStats(*WantBierNeighborStats) (*WantBierNeighborStatsReply, error)
	WantInterfaceCombinedStats(*WantInterfaceCombinedStats) (*WantInterfaceCombinedStatsReply, error)
	WantInterfaceSimpleStats(*WantInterfaceSimpleStats) (*WantInterfaceSimpleStatsReply, error)
	WantIP4FibStats(*WantIP4FibStats) (*WantIP4FibStatsReply, error)
	WantIP4MfibStats(*WantIP4MfibStats) (*WantIP4MfibStatsReply, error)
	WantIP4NbrStats(*WantIP4NbrStats) (*WantIP4NbrStatsReply, error)
	WantIP6FibStats(*WantIP6FibStats) (*WantIP6FibStatsReply, error)
	WantIP6MfibStats(*WantIP6MfibStats) (*WantIP6MfibStatsReply, error)
	WantIP6NbrStats(*WantIP6NbrStats) (*WantIP6NbrStatsReply, error)
	WantPerInterfaceCombinedStats(*WantPerInterfaceCombinedStats) (*WantPerInterfaceCombinedStatsReply, error)
	WantPerInterfaceSimpleStats(*WantPerInterfaceSimpleStats) (*WantPerInterfaceSimpleStatsReply, error)
	WantStats(*WantStats) (*WantStatsReply, error)
	WantUDPEncapStats(*WantUDPEncapStats) (*WantUDPEncapStatsReply, error)
}

/* Aliases */

// InterfaceIndex represents VPP binary API alias 'interface_index':
//
//	"interface_index": {
//	    "type": "u32"
//	}
//
type InterfaceIndex uint32

/* Types */

// VlibCounter represents VPP binary API type 'vlib_counter':
//
//	"vlib_counter",
//	[
//	    "u64",
//	    "packets"
//	],
//	[
//	    "u64",
//	    "bytes"
//	],
//	{
//	    "crc": "0xce2325a2"
//	}
//
type VlibCounter struct {
	Packets uint64
	Bytes   uint64
}

func (*VlibCounter) GetTypeName() string {
	return "vlib_counter"
}
func (*VlibCounter) GetCrcString() string {
	return "ce2325a2"
}

// VnetCombinedCounter represents VPP binary API type 'vnet_combined_counter':
//
//	"vnet_combined_counter",
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u64",
//	    "rx_packets"
//	],
//	[
//	    "u64",
//	    "rx_bytes"
//	],
//	[
//	    "u64",
//	    "rx_unicast_packets"
//	],
//	[
//	    "u64",
//	    "rx_unicast_bytes"
//	],
//	[
//	    "u64",
//	    "rx_multicast_packets"
//	],
//	[
//	    "u64",
//	    "rx_multicast_bytes"
//	],
//	[
//	    "u64",
//	    "rx_broadcast_packets"
//	],
//	[
//	    "u64",
//	    "rx_broadcast_bytes"
//	],
//	[
//	    "u64",
//	    "tx_packets"
//	],
//	[
//	    "u64",
//	    "tx_bytes"
//	],
//	[
//	    "u64",
//	    "tx_unicast_packets"
//	],
//	[
//	    "u64",
//	    "tx_unicast_bytes"
//	],
//	[
//	    "u64",
//	    "tx_multicast_packets"
//	],
//	[
//	    "u64",
//	    "tx_multicast_bytes"
//	],
//	[
//	    "u64",
//	    "tx_broadcast_packets"
//	],
//	[
//	    "u64",
//	    "tx_broadcast_bytes"
//	],
//	{
//	    "crc": "0x20905ca4"
//	}
//
type VnetCombinedCounter struct {
	SwIfIndex          uint32
	RxPackets          uint64
	RxBytes            uint64
	RxUnicastPackets   uint64
	RxUnicastBytes     uint64
	RxMulticastPackets uint64
	RxMulticastBytes   uint64
	RxBroadcastPackets uint64
	RxBroadcastBytes   uint64
	TxPackets          uint64
	TxBytes            uint64
	TxUnicastPackets   uint64
	TxUnicastBytes     uint64
	TxMulticastPackets uint64
	TxMulticastBytes   uint64
	TxBroadcastPackets uint64
	TxBroadcastBytes   uint64
}

func (*VnetCombinedCounter) GetTypeName() string {
	return "vnet_combined_counter"
}
func (*VnetCombinedCounter) GetCrcString() string {
	return "20905ca4"
}

// VnetSimpleCounter represents VPP binary API type 'vnet_simple_counter':
//
//	"vnet_simple_counter",
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u64",
//	    "drop"
//	],
//	[
//	    "u64",
//	    "punt"
//	],
//	[
//	    "u64",
//	    "rx_ip4"
//	],
//	[
//	    "u64",
//	    "rx_ip6"
//	],
//	[
//	    "u64",
//	    "rx_no_buffer"
//	],
//	[
//	    "u64",
//	    "rx_miss"
//	],
//	[
//	    "u64",
//	    "rx_error"
//	],
//	[
//	    "u64",
//	    "tx_error"
//	],
//	[
//	    "u64",
//	    "rx_mpls"
//	],
//	{
//	    "crc": "0x8bd65e2d"
//	}
//
type VnetSimpleCounter struct {
	SwIfIndex  uint32
	Drop       uint64
	Punt       uint64
	RxIP4      uint64
	RxIP6      uint64
	RxNoBuffer uint64
	RxMiss     uint64
	RxError    uint64
	TxError    uint64
	RxMpls     uint64
}

func (*VnetSimpleCounter) GetTypeName() string {
	return "vnet_simple_counter"
}
func (*VnetSimpleCounter) GetCrcString() string {
	return "8bd65e2d"
}

// FibMplsLabel represents VPP binary API type 'fib_mpls_label':
//
//	"fib_mpls_label",
//	[
//	    "u8",
//	    "is_uniform"
//	],
//	[
//	    "u32",
//	    "label"
//	],
//	[
//	    "u8",
//	    "ttl"
//	],
//	[
//	    "u8",
//	    "exp"
//	],
//	{
//	    "crc": "0xc93bf35c"
//	}
//
type FibMplsLabel struct {
	IsUniform uint8
	Label     uint32
	TTL       uint8
	Exp       uint8
}

func (*FibMplsLabel) GetTypeName() string {
	return "fib_mpls_label"
}
func (*FibMplsLabel) GetCrcString() string {
	return "c93bf35c"
}

// FibPath represents VPP binary API type 'fib_path':
//
//	"fib_path",
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u32",
//	    "table_id"
//	],
//	[
//	    "u8",
//	    "weight"
//	],
//	[
//	    "u8",
//	    "preference"
//	],
//	[
//	    "u8",
//	    "is_local"
//	],
//	[
//	    "u8",
//	    "is_drop"
//	],
//	[
//	    "u8",
//	    "is_udp_encap"
//	],
//	[
//	    "u8",
//	    "is_unreach"
//	],
//	[
//	    "u8",
//	    "is_prohibit"
//	],
//	[
//	    "u8",
//	    "is_resolve_host"
//	],
//	[
//	    "u8",
//	    "is_resolve_attached"
//	],
//	[
//	    "u8",
//	    "is_dvr"
//	],
//	[
//	    "u8",
//	    "is_source_lookup"
//	],
//	[
//	    "u8",
//	    "afi"
//	],
//	[
//	    "u8",
//	    "next_hop",
//	    16
//	],
//	[
//	    "u32",
//	    "next_hop_id"
//	],
//	[
//	    "u32",
//	    "rpf_id"
//	],
//	[
//	    "u32",
//	    "via_label"
//	],
//	[
//	    "u8",
//	    "n_labels"
//	],
//	[
//	    "vl_api_fib_mpls_label_t",
//	    "label_stack",
//	    16
//	],
//	{
//	    "crc": "0xabe483ef"
//	}
//
type FibPath struct {
	SwIfIndex         uint32
	TableID           uint32
	Weight            uint8
	Preference        uint8
	IsLocal           uint8
	IsDrop            uint8
	IsUDPEncap        uint8
	IsUnreach         uint8
	IsProhibit        uint8
	IsResolveHost     uint8
	IsResolveAttached uint8
	IsDvr             uint8
	IsSourceLookup    uint8
	Afi               uint8
	NextHop           []byte `struc:"[16]byte"`
	NextHopID         uint32
	RpfID             uint32
	ViaLabel          uint32
	NLabels           uint8
	LabelStack        []FibMplsLabel `struc:"[16]FibMplsLabel"`
}

func (*FibPath) GetTypeName() string {
	return "fib_path"
}
func (*FibPath) GetCrcString() string {
	return "abe483ef"
}

// BierTableID represents VPP binary API type 'bier_table_id':
//
//	"bier_table_id",
//	[
//	    "u8",
//	    "bt_set"
//	],
//	[
//	    "u8",
//	    "bt_sub_domain"
//	],
//	[
//	    "u8",
//	    "bt_hdr_len_id"
//	],
//	{
//	    "crc": "0x435c691d"
//	}
//
type BierTableID struct {
	BtSet       uint8
	BtSubDomain uint8
	BtHdrLenID  uint8
}

func (*BierTableID) GetTypeName() string {
	return "bier_table_id"
}
func (*BierTableID) GetCrcString() string {
	return "435c691d"
}

// IP4FibCounter represents VPP binary API type 'ip4_fib_counter':
//
//	"ip4_fib_counter",
//	[
//	    "u32",
//	    "address"
//	],
//	[
//	    "u8",
//	    "address_length"
//	],
//	[
//	    "u64",
//	    "packets"
//	],
//	[
//	    "u64",
//	    "bytes"
//	],
//	{
//	    "crc": "0xa6ceb0c9"
//	}
//
type IP4FibCounter struct {
	Address       uint32
	AddressLength uint8
	Packets       uint64
	Bytes         uint64
}

func (*IP4FibCounter) GetTypeName() string {
	return "ip4_fib_counter"
}
func (*IP4FibCounter) GetCrcString() string {
	return "a6ceb0c9"
}

// IP4MfibCounter represents VPP binary API type 'ip4_mfib_counter':
//
//	"ip4_mfib_counter",
//	[
//	    "u8",
//	    "source",
//	    4
//	],
//	[
//	    "u8",
//	    "group",
//	    4
//	],
//	[
//	    "u8",
//	    "group_length"
//	],
//	[
//	    "u64",
//	    "packets"
//	],
//	[
//	    "u64",
//	    "bytes"
//	],
//	{
//	    "crc": "0x2cee4721"
//	}
//
type IP4MfibCounter struct {
	Source      []byte `struc:"[4]byte"`
	Group       []byte `struc:"[4]byte"`
	GroupLength uint8
	Packets     uint64
	Bytes       uint64
}

func (*IP4MfibCounter) GetTypeName() string {
	return "ip4_mfib_counter"
}
func (*IP4MfibCounter) GetCrcString() string {
	return "2cee4721"
}

// IP4NbrCounter represents VPP binary API type 'ip4_nbr_counter':
//
//	"ip4_nbr_counter",
//	[
//	    "u32",
//	    "address"
//	],
//	[
//	    "u8",
//	    "link_type"
//	],
//	[
//	    "u64",
//	    "packets"
//	],
//	[
//	    "u64",
//	    "bytes"
//	],
//	{
//	    "crc": "0xb9f974d6"
//	}
//
type IP4NbrCounter struct {
	Address  uint32
	LinkType uint8
	Packets  uint64
	Bytes    uint64
}

func (*IP4NbrCounter) GetTypeName() string {
	return "ip4_nbr_counter"
}
func (*IP4NbrCounter) GetCrcString() string {
	return "b9f974d6"
}

// IP6FibCounter represents VPP binary API type 'ip6_fib_counter':
//
//	"ip6_fib_counter",
//	[
//	    "u64",
//	    "address",
//	    2
//	],
//	[
//	    "u8",
//	    "address_length"
//	],
//	[
//	    "u64",
//	    "packets"
//	],
//	[
//	    "u64",
//	    "bytes"
//	],
//	{
//	    "crc": "0xf1197efb"
//	}
//
type IP6FibCounter struct {
	Address       []uint64 `struc:"[2]uint64"`
	AddressLength uint8
	Packets       uint64
	Bytes         uint64
}

func (*IP6FibCounter) GetTypeName() string {
	return "ip6_fib_counter"
}
func (*IP6FibCounter) GetCrcString() string {
	return "f1197efb"
}

// IP6MfibCounter represents VPP binary API type 'ip6_mfib_counter':
//
//	"ip6_mfib_counter",
//	[
//	    "u8",
//	    "source",
//	    16
//	],
//	[
//	    "u8",
//	    "group",
//	    16
//	],
//	[
//	    "u8",
//	    "group_length"
//	],
//	[
//	    "u64",
//	    "packets"
//	],
//	[
//	    "u64",
//	    "bytes"
//	],
//	{
//	    "crc": "0x90a9590e"
//	}
//
type IP6MfibCounter struct {
	Source      []byte `struc:"[16]byte"`
	Group       []byte `struc:"[16]byte"`
	GroupLength uint8
	Packets     uint64
	Bytes       uint64
}

func (*IP6MfibCounter) GetTypeName() string {
	return "ip6_mfib_counter"
}
func (*IP6MfibCounter) GetCrcString() string {
	return "90a9590e"
}

// IP6NbrCounter represents VPP binary API type 'ip6_nbr_counter':
//
//	"ip6_nbr_counter",
//	[
//	    "u64",
//	    "address",
//	    2
//	],
//	[
//	    "u8",
//	    "link_type"
//	],
//	[
//	    "u64",
//	    "packets"
//	],
//	[
//	    "u64",
//	    "bytes"
//	],
//	{
//	    "crc": "0x2d755474"
//	}
//
type IP6NbrCounter struct {
	Address  []uint64 `struc:"[2]uint64"`
	LinkType uint8
	Packets  uint64
	Bytes    uint64
}

func (*IP6NbrCounter) GetTypeName() string {
	return "ip6_nbr_counter"
}
func (*IP6NbrCounter) GetCrcString() string {
	return "2d755474"
}

// UDPEncapCounter represents VPP binary API type 'udp_encap_counter':
//
//	"udp_encap_counter",
//	[
//	    "u32",
//	    "id"
//	],
//	[
//	    "u64",
//	    "packets"
//	],
//	[
//	    "u64",
//	    "bytes"
//	],
//	{
//	    "crc": "0x7107035f"
//	}
//
type UDPEncapCounter struct {
	ID      uint32
	Packets uint64
	Bytes   uint64
}

func (*UDPEncapCounter) GetTypeName() string {
	return "udp_encap_counter"
}
func (*UDPEncapCounter) GetCrcString() string {
	return "7107035f"
}

// BierNeighborCounter represents VPP binary API type 'bier_neighbor_counter':
//
//	"bier_neighbor_counter",
//	[
//	    "vl_api_bier_table_id_t",
//	    "tbl_id"
//	],
//	[
//	    "vl_api_fib_path_t",
//	    "path"
//	],
//	[
//	    "u64",
//	    "packets"
//	],
//	[
//	    "u64",
//	    "bytes"
//	],
//	{
//	    "crc": "0x91fe1748"
//	}
//
type BierNeighborCounter struct {
	TblID   BierTableID
	Path    FibPath
	Packets uint64
	Bytes   uint64
}

func (*BierNeighborCounter) GetTypeName() string {
	return "bier_neighbor_counter"
}
func (*BierNeighborCounter) GetCrcString() string {
	return "91fe1748"
}

/* Messages */

// WantStats represents VPP binary API message 'want_stats':
//
//	"want_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0x476f5a08"
//	}
//
type WantStats struct {
	EnableDisable uint32
	PID           uint32
}

func (*WantStats) GetMessageName() string {
	return "want_stats"
}
func (*WantStats) GetCrcString() string {
	return "476f5a08"
}
func (*WantStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantStatsReply represents VPP binary API message 'want_stats_reply':
//
//	"want_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantStatsReply struct {
	Retval int32
}

func (*WantStatsReply) GetMessageName() string {
	return "want_stats_reply"
}
func (*WantStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantInterfaceSimpleStats represents VPP binary API message 'want_interface_simple_stats':
//
//	"want_interface_simple_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0x476f5a08"
//	}
//
type WantInterfaceSimpleStats struct {
	EnableDisable uint32
	PID           uint32
}

func (*WantInterfaceSimpleStats) GetMessageName() string {
	return "want_interface_simple_stats"
}
func (*WantInterfaceSimpleStats) GetCrcString() string {
	return "476f5a08"
}
func (*WantInterfaceSimpleStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantInterfaceSimpleStatsReply represents VPP binary API message 'want_interface_simple_stats_reply':
//
//	"want_interface_simple_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantInterfaceSimpleStatsReply struct {
	Retval int32
}

func (*WantInterfaceSimpleStatsReply) GetMessageName() string {
	return "want_interface_simple_stats_reply"
}
func (*WantInterfaceSimpleStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantInterfaceSimpleStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantPerInterfaceSimpleStats represents VPP binary API message 'want_per_interface_simple_stats':
//
//	"want_per_interface_simple_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	[
//	    "u32",
//	    "num"
//	],
//	[
//	    "u32",
//	    "sw_ifs",
//	    0,
//	    "num"
//	],
//	{
//	    "crc": "0x729d04f1"
//	}
//
type WantPerInterfaceSimpleStats struct {
	EnableDisable uint32
	PID           uint32
	Num           uint32 `struc:"sizeof=SwIfs"`
	SwIfs         []uint32
}

func (*WantPerInterfaceSimpleStats) GetMessageName() string {
	return "want_per_interface_simple_stats"
}
func (*WantPerInterfaceSimpleStats) GetCrcString() string {
	return "729d04f1"
}
func (*WantPerInterfaceSimpleStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantPerInterfaceSimpleStatsReply represents VPP binary API message 'want_per_interface_simple_stats_reply':
//
//	"want_per_interface_simple_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantPerInterfaceSimpleStatsReply struct {
	Retval int32
}

func (*WantPerInterfaceSimpleStatsReply) GetMessageName() string {
	return "want_per_interface_simple_stats_reply"
}
func (*WantPerInterfaceSimpleStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantPerInterfaceSimpleStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantInterfaceCombinedStats represents VPP binary API message 'want_interface_combined_stats':
//
//	"want_interface_combined_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0x476f5a08"
//	}
//
type WantInterfaceCombinedStats struct {
	EnableDisable uint32
	PID           uint32
}

func (*WantInterfaceCombinedStats) GetMessageName() string {
	return "want_interface_combined_stats"
}
func (*WantInterfaceCombinedStats) GetCrcString() string {
	return "476f5a08"
}
func (*WantInterfaceCombinedStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantInterfaceCombinedStatsReply represents VPP binary API message 'want_interface_combined_stats_reply':
//
//	"want_interface_combined_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantInterfaceCombinedStatsReply struct {
	Retval int32
}

func (*WantInterfaceCombinedStatsReply) GetMessageName() string {
	return "want_interface_combined_stats_reply"
}
func (*WantInterfaceCombinedStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantInterfaceCombinedStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantPerInterfaceCombinedStats represents VPP binary API message 'want_per_interface_combined_stats':
//
//	"want_per_interface_combined_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	[
//	    "u32",
//	    "num"
//	],
//	[
//	    "u32",
//	    "sw_ifs",
//	    0,
//	    "num"
//	],
//	{
//	    "crc": "0x729d04f1"
//	}
//
type WantPerInterfaceCombinedStats struct {
	EnableDisable uint32
	PID           uint32
	Num           uint32 `struc:"sizeof=SwIfs"`
	SwIfs         []uint32
}

func (*WantPerInterfaceCombinedStats) GetMessageName() string {
	return "want_per_interface_combined_stats"
}
func (*WantPerInterfaceCombinedStats) GetCrcString() string {
	return "729d04f1"
}
func (*WantPerInterfaceCombinedStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantPerInterfaceCombinedStatsReply represents VPP binary API message 'want_per_interface_combined_stats_reply':
//
//	"want_per_interface_combined_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantPerInterfaceCombinedStatsReply struct {
	Retval int32
}

func (*WantPerInterfaceCombinedStatsReply) GetMessageName() string {
	return "want_per_interface_combined_stats_reply"
}
func (*WantPerInterfaceCombinedStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantPerInterfaceCombinedStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantIP4FibStats represents VPP binary API message 'want_ip4_fib_stats':
//
//	"want_ip4_fib_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0x476f5a08"
//	}
//
type WantIP4FibStats struct {
	EnableDisable uint32
	PID           uint32
}

func (*WantIP4FibStats) GetMessageName() string {
	return "want_ip4_fib_stats"
}
func (*WantIP4FibStats) GetCrcString() string {
	return "476f5a08"
}
func (*WantIP4FibStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantIP4FibStatsReply represents VPP binary API message 'want_ip4_fib_stats_reply':
//
//	"want_ip4_fib_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantIP4FibStatsReply struct {
	Retval int32
}

func (*WantIP4FibStatsReply) GetMessageName() string {
	return "want_ip4_fib_stats_reply"
}
func (*WantIP4FibStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantIP4FibStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantIP6FibStats represents VPP binary API message 'want_ip6_fib_stats':
//
//	"want_ip6_fib_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0x476f5a08"
//	}
//
type WantIP6FibStats struct {
	EnableDisable uint32
	PID           uint32
}

func (*WantIP6FibStats) GetMessageName() string {
	return "want_ip6_fib_stats"
}
func (*WantIP6FibStats) GetCrcString() string {
	return "476f5a08"
}
func (*WantIP6FibStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantIP6FibStatsReply represents VPP binary API message 'want_ip6_fib_stats_reply':
//
//	"want_ip6_fib_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantIP6FibStatsReply struct {
	Retval int32
}

func (*WantIP6FibStatsReply) GetMessageName() string {
	return "want_ip6_fib_stats_reply"
}
func (*WantIP6FibStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantIP6FibStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantIP4MfibStats represents VPP binary API message 'want_ip4_mfib_stats':
//
//	"want_ip4_mfib_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0x476f5a08"
//	}
//
type WantIP4MfibStats struct {
	EnableDisable uint32
	PID           uint32
}

func (*WantIP4MfibStats) GetMessageName() string {
	return "want_ip4_mfib_stats"
}
func (*WantIP4MfibStats) GetCrcString() string {
	return "476f5a08"
}
func (*WantIP4MfibStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantIP4MfibStatsReply represents VPP binary API message 'want_ip4_mfib_stats_reply':
//
//	"want_ip4_mfib_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantIP4MfibStatsReply struct {
	Retval int32
}

func (*WantIP4MfibStatsReply) GetMessageName() string {
	return "want_ip4_mfib_stats_reply"
}
func (*WantIP4MfibStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantIP4MfibStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantIP6MfibStats represents VPP binary API message 'want_ip6_mfib_stats':
//
//	"want_ip6_mfib_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0x476f5a08"
//	}
//
type WantIP6MfibStats struct {
	EnableDisable uint32
	PID           uint32
}

func (*WantIP6MfibStats) GetMessageName() string {
	return "want_ip6_mfib_stats"
}
func (*WantIP6MfibStats) GetCrcString() string {
	return "476f5a08"
}
func (*WantIP6MfibStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantIP6MfibStatsReply represents VPP binary API message 'want_ip6_mfib_stats_reply':
//
//	"want_ip6_mfib_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantIP6MfibStatsReply struct {
	Retval int32
}

func (*WantIP6MfibStatsReply) GetMessageName() string {
	return "want_ip6_mfib_stats_reply"
}
func (*WantIP6MfibStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantIP6MfibStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantIP4NbrStats represents VPP binary API message 'want_ip4_nbr_stats':
//
//	"want_ip4_nbr_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0x476f5a08"
//	}
//
type WantIP4NbrStats struct {
	EnableDisable uint32
	PID           uint32
}

func (*WantIP4NbrStats) GetMessageName() string {
	return "want_ip4_nbr_stats"
}
func (*WantIP4NbrStats) GetCrcString() string {
	return "476f5a08"
}
func (*WantIP4NbrStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantIP4NbrStatsReply represents VPP binary API message 'want_ip4_nbr_stats_reply':
//
//	"want_ip4_nbr_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantIP4NbrStatsReply struct {
	Retval int32
}

func (*WantIP4NbrStatsReply) GetMessageName() string {
	return "want_ip4_nbr_stats_reply"
}
func (*WantIP4NbrStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantIP4NbrStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantIP6NbrStats represents VPP binary API message 'want_ip6_nbr_stats':
//
//	"want_ip6_nbr_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable_disable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0x476f5a08"
//	}
//
type WantIP6NbrStats struct {
	EnableDisable uint32
	PID           uint32
}

func (*WantIP6NbrStats) GetMessageName() string {
	return "want_ip6_nbr_stats"
}
func (*WantIP6NbrStats) GetCrcString() string {
	return "476f5a08"
}
func (*WantIP6NbrStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantIP6NbrStatsReply represents VPP binary API message 'want_ip6_nbr_stats_reply':
//
//	"want_ip6_nbr_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantIP6NbrStatsReply struct {
	Retval int32
}

func (*WantIP6NbrStatsReply) GetMessageName() string {
	return "want_ip6_nbr_stats_reply"
}
func (*WantIP6NbrStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantIP6NbrStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// VnetIP4FibCounters represents VPP binary API message 'vnet_ip4_fib_counters':
//
//	"vnet_ip4_fib_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "vrf_id"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "vl_api_ip4_fib_counter_t",
//	    "c",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0x57e3feec"
//	}
//
type VnetIP4FibCounters struct {
	VrfID uint32
	Count uint32 `struc:"sizeof=C"`
	C     []IP4FibCounter
}

func (*VnetIP4FibCounters) GetMessageName() string {
	return "vnet_ip4_fib_counters"
}
func (*VnetIP4FibCounters) GetCrcString() string {
	return "57e3feec"
}
func (*VnetIP4FibCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// VnetIP4MfibCounters represents VPP binary API message 'vnet_ip4_mfib_counters':
//
//	"vnet_ip4_mfib_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "vrf_id"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "vl_api_ip4_mfib_counter_t",
//	    "c",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0x946eb588"
//	}
//
type VnetIP4MfibCounters struct {
	VrfID uint32
	Count uint32 `struc:"sizeof=C"`
	C     []IP4MfibCounter
}

func (*VnetIP4MfibCounters) GetMessageName() string {
	return "vnet_ip4_mfib_counters"
}
func (*VnetIP4MfibCounters) GetCrcString() string {
	return "946eb588"
}
func (*VnetIP4MfibCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// VnetIP4NbrCounters represents VPP binary API message 'vnet_ip4_nbr_counters':
//
//	"vnet_ip4_nbr_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "begin"
//	],
//	[
//	    "vl_api_ip4_nbr_counter_t",
//	    "c",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0x214c4811"
//	}
//
type VnetIP4NbrCounters struct {
	Count     uint32 `struc:"sizeof=C"`
	SwIfIndex uint32
	Begin     uint8
	C         []IP4NbrCounter
}

func (*VnetIP4NbrCounters) GetMessageName() string {
	return "vnet_ip4_nbr_counters"
}
func (*VnetIP4NbrCounters) GetCrcString() string {
	return "214c4811"
}
func (*VnetIP4NbrCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// VnetIP6FibCounters represents VPP binary API message 'vnet_ip6_fib_counters':
//
//	"vnet_ip6_fib_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "vrf_id"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "vl_api_ip6_fib_counter_t",
//	    "c",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0x13aed73d"
//	}
//
type VnetIP6FibCounters struct {
	VrfID uint32
	Count uint32 `struc:"sizeof=C"`
	C     []IP6FibCounter
}

func (*VnetIP6FibCounters) GetMessageName() string {
	return "vnet_ip6_fib_counters"
}
func (*VnetIP6FibCounters) GetCrcString() string {
	return "13aed73d"
}
func (*VnetIP6FibCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// VnetIP6MfibCounters represents VPP binary API message 'vnet_ip6_mfib_counters':
//
//	"vnet_ip6_mfib_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "vrf_id"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "vl_api_ip6_mfib_counter_t",
//	    "c",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0x65fe1ae3"
//	}
//
type VnetIP6MfibCounters struct {
	VrfID uint32
	Count uint32 `struc:"sizeof=C"`
	C     []IP6MfibCounter
}

func (*VnetIP6MfibCounters) GetMessageName() string {
	return "vnet_ip6_mfib_counters"
}
func (*VnetIP6MfibCounters) GetCrcString() string {
	return "65fe1ae3"
}
func (*VnetIP6MfibCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// VnetIP6NbrCounters represents VPP binary API message 'vnet_ip6_nbr_counters':
//
//	"vnet_ip6_nbr_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "u32",
//	    "sw_if_index"
//	],
//	[
//	    "u8",
//	    "begin"
//	],
//	[
//	    "vl_api_ip6_nbr_counter_t",
//	    "c",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0x650161c0"
//	}
//
type VnetIP6NbrCounters struct {
	Count     uint32 `struc:"sizeof=C"`
	SwIfIndex uint32
	Begin     uint8
	C         []IP6NbrCounter
}

func (*VnetIP6NbrCounters) GetMessageName() string {
	return "vnet_ip6_nbr_counters"
}
func (*VnetIP6NbrCounters) GetCrcString() string {
	return "650161c0"
}
func (*VnetIP6NbrCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// VnetInterfaceSimpleCounters represents VPP binary API message 'vnet_interface_simple_counters':
//
//	"vnet_interface_simple_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u8",
//	    "vnet_counter_type"
//	],
//	[
//	    "u32",
//	    "first_sw_if_index"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "u64",
//	    "data",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0x9bc4a808"
//	}
//
type VnetInterfaceSimpleCounters struct {
	VnetCounterType uint8
	FirstSwIfIndex  uint32
	Count           uint32 `struc:"sizeof=Data"`
	Data            []uint64
}

func (*VnetInterfaceSimpleCounters) GetMessageName() string {
	return "vnet_interface_simple_counters"
}
func (*VnetInterfaceSimpleCounters) GetCrcString() string {
	return "9bc4a808"
}
func (*VnetInterfaceSimpleCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// VnetInterfaceCombinedCounters represents VPP binary API message 'vnet_interface_combined_counters':
//
//	"vnet_interface_combined_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u8",
//	    "vnet_counter_type"
//	],
//	[
//	    "u32",
//	    "first_sw_if_index"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "vl_api_vlib_counter_t",
//	    "data",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0x2c595002"
//	}
//
type VnetInterfaceCombinedCounters struct {
	VnetCounterType uint8
	FirstSwIfIndex  uint32
	Count           uint32 `struc:"sizeof=Data"`
	Data            []VlibCounter
}

func (*VnetInterfaceCombinedCounters) GetMessageName() string {
	return "vnet_interface_combined_counters"
}
func (*VnetInterfaceCombinedCounters) GetCrcString() string {
	return "2c595002"
}
func (*VnetInterfaceCombinedCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// VnetPerInterfaceSimpleCounters represents VPP binary API message 'vnet_per_interface_simple_counters':
//
//	"vnet_per_interface_simple_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "u32",
//	    "timestamp"
//	],
//	[
//	    "vl_api_vnet_simple_counter_t",
//	    "data",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0xd1fba9ba"
//	}
//
type VnetPerInterfaceSimpleCounters struct {
	Count     uint32 `struc:"sizeof=Data"`
	Timestamp uint32
	Data      []VnetSimpleCounter
}

func (*VnetPerInterfaceSimpleCounters) GetMessageName() string {
	return "vnet_per_interface_simple_counters"
}
func (*VnetPerInterfaceSimpleCounters) GetCrcString() string {
	return "d1fba9ba"
}
func (*VnetPerInterfaceSimpleCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// VnetPerInterfaceCombinedCounters represents VPP binary API message 'vnet_per_interface_combined_counters':
//
//	"vnet_per_interface_combined_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "u32",
//	    "timestamp"
//	],
//	[
//	    "vl_api_vnet_combined_counter_t",
//	    "data",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0xdc578375"
//	}
//
type VnetPerInterfaceCombinedCounters struct {
	Count     uint32 `struc:"sizeof=Data"`
	Timestamp uint32
	Data      []VnetCombinedCounter
}

func (*VnetPerInterfaceCombinedCounters) GetMessageName() string {
	return "vnet_per_interface_combined_counters"
}
func (*VnetPerInterfaceCombinedCounters) GetCrcString() string {
	return "dc578375"
}
func (*VnetPerInterfaceCombinedCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// VnetGetSummaryStats represents VPP binary API message 'vnet_get_summary_stats':
//
//	"vnet_get_summary_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	{
//	    "crc": "0x51077d14"
//	}
//
type VnetGetSummaryStats struct{}

func (*VnetGetSummaryStats) GetMessageName() string {
	return "vnet_get_summary_stats"
}
func (*VnetGetSummaryStats) GetCrcString() string {
	return "51077d14"
}
func (*VnetGetSummaryStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// VnetGetSummaryStatsReply represents VPP binary API message 'vnet_get_summary_stats_reply':
//
//	"vnet_get_summary_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	[
//	    "u64",
//	    "total_pkts",
//	    8
//	],
//	[
//	    "u64",
//	    "total_bytes",
//	    8
//	],
//	[
//	    "f64",
//	    "vector_rate"
//	],
//	{
//	    "crc": "0x82b5e46c"
//	}
//
type VnetGetSummaryStatsReply struct {
	Retval     int32
	TotalPkts  []uint64 `struc:"[8]uint64"`
	TotalBytes []uint64 `struc:"[8]uint64"`
	VectorRate float64
}

func (*VnetGetSummaryStatsReply) GetMessageName() string {
	return "vnet_get_summary_stats_reply"
}
func (*VnetGetSummaryStatsReply) GetCrcString() string {
	return "82b5e46c"
}
func (*VnetGetSummaryStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// StatsGetPollerDelay represents VPP binary API message 'stats_get_poller_delay':
//
//	"stats_get_poller_delay",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	{
//	    "crc": "0x51077d14"
//	}
//
type StatsGetPollerDelay struct{}

func (*StatsGetPollerDelay) GetMessageName() string {
	return "stats_get_poller_delay"
}
func (*StatsGetPollerDelay) GetCrcString() string {
	return "51077d14"
}
func (*StatsGetPollerDelay) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// StatsGetPollerDelayReply represents VPP binary API message 'stats_get_poller_delay_reply':
//
//	"stats_get_poller_delay_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	[
//	    "u32",
//	    "delay"
//	],
//	{
//	    "crc": "0x8c445a33"
//	}
//
type StatsGetPollerDelayReply struct {
	Retval int32
	Delay  uint32
}

func (*StatsGetPollerDelayReply) GetMessageName() string {
	return "stats_get_poller_delay_reply"
}
func (*StatsGetPollerDelayReply) GetCrcString() string {
	return "8c445a33"
}
func (*StatsGetPollerDelayReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// WantUDPEncapStats represents VPP binary API message 'want_udp_encap_stats':
//
//	"want_udp_encap_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0xcfaccc1f"
//	}
//
type WantUDPEncapStats struct {
	Enable uint32
	PID    uint32
}

func (*WantUDPEncapStats) GetMessageName() string {
	return "want_udp_encap_stats"
}
func (*WantUDPEncapStats) GetCrcString() string {
	return "cfaccc1f"
}
func (*WantUDPEncapStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantUDPEncapStatsReply represents VPP binary API message 'want_udp_encap_stats_reply':
//
//	"want_udp_encap_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantUDPEncapStatsReply struct {
	Retval int32
}

func (*WantUDPEncapStatsReply) GetMessageName() string {
	return "want_udp_encap_stats_reply"
}
func (*WantUDPEncapStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantUDPEncapStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// VnetUDPEncapCounters represents VPP binary API message 'vnet_udp_encap_counters':
//
//	"vnet_udp_encap_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "timestamp"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "vl_api_udp_encap_counter_t",
//	    "c",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0x1ab5e649"
//	}
//
type VnetUDPEncapCounters struct {
	Timestamp uint32
	Count     uint32 `struc:"sizeof=C"`
	C         []UDPEncapCounter
}

func (*VnetUDPEncapCounters) GetMessageName() string {
	return "vnet_udp_encap_counters"
}
func (*VnetUDPEncapCounters) GetCrcString() string {
	return "1ab5e649"
}
func (*VnetUDPEncapCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

// WantBierNeighborStats represents VPP binary API message 'want_bier_neighbor_stats':
//
//	"want_bier_neighbor_stats",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "client_index"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "u32",
//	    "enable"
//	],
//	[
//	    "u32",
//	    "pid"
//	],
//	{
//	    "crc": "0xcfaccc1f"
//	}
//
type WantBierNeighborStats struct {
	Enable uint32
	PID    uint32
}

func (*WantBierNeighborStats) GetMessageName() string {
	return "want_bier_neighbor_stats"
}
func (*WantBierNeighborStats) GetCrcString() string {
	return "cfaccc1f"
}
func (*WantBierNeighborStats) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// WantBierNeighborStatsReply represents VPP binary API message 'want_bier_neighbor_stats_reply':
//
//	"want_bier_neighbor_stats_reply",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "context"
//	],
//	[
//	    "i32",
//	    "retval"
//	],
//	{
//	    "crc": "0xe8d4e804"
//	}
//
type WantBierNeighborStatsReply struct {
	Retval int32
}

func (*WantBierNeighborStatsReply) GetMessageName() string {
	return "want_bier_neighbor_stats_reply"
}
func (*WantBierNeighborStatsReply) GetCrcString() string {
	return "e8d4e804"
}
func (*WantBierNeighborStatsReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// VnetBierNeighborCounters represents VPP binary API message 'vnet_bier_neighbor_counters':
//
//	"vnet_bier_neighbor_counters",
//	[
//	    "u16",
//	    "_vl_msg_id"
//	],
//	[
//	    "u32",
//	    "timestamp"
//	],
//	[
//	    "u32",
//	    "count"
//	],
//	[
//	    "vl_api_bier_neighbor_counter_t",
//	    "c",
//	    0,
//	    "count"
//	],
//	{
//	    "crc": "0xee0481ce"
//	}
//
type VnetBierNeighborCounters struct {
	Timestamp uint32
	Count     uint32 `struc:"sizeof=C"`
	C         []BierNeighborCounter
}

func (*VnetBierNeighborCounters) GetMessageName() string {
	return "vnet_bier_neighbor_counters"
}
func (*VnetBierNeighborCounters) GetCrcString() string {
	return "ee0481ce"
}
func (*VnetBierNeighborCounters) GetMessageType() api.MessageType {
	return api.OtherMessage
}

func init() {
	api.RegisterMessage((*WantStats)(nil), "stats.WantStats")
	api.RegisterMessage((*WantStatsReply)(nil), "stats.WantStatsReply")
	api.RegisterMessage((*WantInterfaceSimpleStats)(nil), "stats.WantInterfaceSimpleStats")
	api.RegisterMessage((*WantInterfaceSimpleStatsReply)(nil), "stats.WantInterfaceSimpleStatsReply")
	api.RegisterMessage((*WantPerInterfaceSimpleStats)(nil), "stats.WantPerInterfaceSimpleStats")
	api.RegisterMessage((*WantPerInterfaceSimpleStatsReply)(nil), "stats.WantPerInterfaceSimpleStatsReply")
	api.RegisterMessage((*WantInterfaceCombinedStats)(nil), "stats.WantInterfaceCombinedStats")
	api.RegisterMessage((*WantInterfaceCombinedStatsReply)(nil), "stats.WantInterfaceCombinedStatsReply")
	api.RegisterMessage((*WantPerInterfaceCombinedStats)(nil), "stats.WantPerInterfaceCombinedStats")
	api.RegisterMessage((*WantPerInterfaceCombinedStatsReply)(nil), "stats.WantPerInterfaceCombinedStatsReply")
	api.RegisterMessage((*WantIP4FibStats)(nil), "stats.WantIP4FibStats")
	api.RegisterMessage((*WantIP4FibStatsReply)(nil), "stats.WantIP4FibStatsReply")
	api.RegisterMessage((*WantIP6FibStats)(nil), "stats.WantIP6FibStats")
	api.RegisterMessage((*WantIP6FibStatsReply)(nil), "stats.WantIP6FibStatsReply")
	api.RegisterMessage((*WantIP4MfibStats)(nil), "stats.WantIP4MfibStats")
	api.RegisterMessage((*WantIP4MfibStatsReply)(nil), "stats.WantIP4MfibStatsReply")
	api.RegisterMessage((*WantIP6MfibStats)(nil), "stats.WantIP6MfibStats")
	api.RegisterMessage((*WantIP6MfibStatsReply)(nil), "stats.WantIP6MfibStatsReply")
	api.RegisterMessage((*WantIP4NbrStats)(nil), "stats.WantIP4NbrStats")
	api.RegisterMessage((*WantIP4NbrStatsReply)(nil), "stats.WantIP4NbrStatsReply")
	api.RegisterMessage((*WantIP6NbrStats)(nil), "stats.WantIP6NbrStats")
	api.RegisterMessage((*WantIP6NbrStatsReply)(nil), "stats.WantIP6NbrStatsReply")
	api.RegisterMessage((*VnetIP4FibCounters)(nil), "stats.VnetIP4FibCounters")
	api.RegisterMessage((*VnetIP4MfibCounters)(nil), "stats.VnetIP4MfibCounters")
	api.RegisterMessage((*VnetIP4NbrCounters)(nil), "stats.VnetIP4NbrCounters")
	api.RegisterMessage((*VnetIP6FibCounters)(nil), "stats.VnetIP6FibCounters")
	api.RegisterMessage((*VnetIP6MfibCounters)(nil), "stats.VnetIP6MfibCounters")
	api.RegisterMessage((*VnetIP6NbrCounters)(nil), "stats.VnetIP6NbrCounters")
	api.RegisterMessage((*VnetInterfaceSimpleCounters)(nil), "stats.VnetInterfaceSimpleCounters")
	api.RegisterMessage((*VnetInterfaceCombinedCounters)(nil), "stats.VnetInterfaceCombinedCounters")
	api.RegisterMessage((*VnetPerInterfaceSimpleCounters)(nil), "stats.VnetPerInterfaceSimpleCounters")
	api.RegisterMessage((*VnetPerInterfaceCombinedCounters)(nil), "stats.VnetPerInterfaceCombinedCounters")
	api.RegisterMessage((*VnetGetSummaryStats)(nil), "stats.VnetGetSummaryStats")
	api.RegisterMessage((*VnetGetSummaryStatsReply)(nil), "stats.VnetGetSummaryStatsReply")
	api.RegisterMessage((*StatsGetPollerDelay)(nil), "stats.StatsGetPollerDelay")
	api.RegisterMessage((*StatsGetPollerDelayReply)(nil), "stats.StatsGetPollerDelayReply")
	api.RegisterMessage((*WantUDPEncapStats)(nil), "stats.WantUDPEncapStats")
	api.RegisterMessage((*WantUDPEncapStatsReply)(nil), "stats.WantUDPEncapStatsReply")
	api.RegisterMessage((*VnetUDPEncapCounters)(nil), "stats.VnetUDPEncapCounters")
	api.RegisterMessage((*WantBierNeighborStats)(nil), "stats.WantBierNeighborStats")
	api.RegisterMessage((*WantBierNeighborStatsReply)(nil), "stats.WantBierNeighborStatsReply")
	api.RegisterMessage((*VnetBierNeighborCounters)(nil), "stats.VnetBierNeighborCounters")
}
