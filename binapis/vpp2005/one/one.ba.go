// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// source: binapis/vpp2005/.vppapi/core/one.api.json

/*
Package one is a generated VPP binary API for 'one' module.

It consists of:
	 14 enums
	  7 aliases
	 14 types
	  2 unions
	108 messages
	 54 services
*/
package one

import (
	"bytes"
	"context"
	"io"
	"strconv"

	api "git.fd.io/govpp.git/api"
	struc "github.com/lunixbochs/struc"
)

const (
	// ModuleName is the name of this module.
	ModuleName = "one"
	// APIVersion is the API version of this module.
	APIVersion = "2.0.0"
	// VersionCrc is the CRC of this module.
	VersionCrc = 0x288aaf5d
)

// AddressFamily represents VPP binary API enum 'address_family'.
type AddressFamily uint8

const (
	ADDRESS_IP4 AddressFamily = 0
	ADDRESS_IP6 AddressFamily = 1
)

var AddressFamily_name = map[uint8]string{
	0: "ADDRESS_IP4",
	1: "ADDRESS_IP6",
}

var AddressFamily_value = map[string]uint8{
	"ADDRESS_IP4": 0,
	"ADDRESS_IP6": 1,
}

func (x AddressFamily) String() string {
	s, ok := AddressFamily_name[uint8(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// EidType represents VPP binary API enum 'eid_type'.
type EidType uint8

const (
	EID_TYPE_API_PREFIX EidType = 0
	EID_TYPE_API_MAC    EidType = 1
	EID_TYPE_API_NSH    EidType = 2
)

var EidType_name = map[uint8]string{
	0: "EID_TYPE_API_PREFIX",
	1: "EID_TYPE_API_MAC",
	2: "EID_TYPE_API_NSH",
}

var EidType_value = map[string]uint8{
	"EID_TYPE_API_PREFIX": 0,
	"EID_TYPE_API_MAC":    1,
	"EID_TYPE_API_NSH":    2,
}

func (x EidType) String() string {
	s, ok := EidType_name[uint8(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// HmacKeyID represents VPP binary API enum 'hmac_key_id'.
type HmacKeyID uint8

const (
	KEY_ID_API_HMAC_NO_KEY      HmacKeyID = 0
	KEY_ID_API_HMAC_SHA_1_96    HmacKeyID = 1
	KEY_ID_API_HMAC_SHA_256_128 HmacKeyID = 2
)

var HmacKeyID_name = map[uint8]string{
	0: "KEY_ID_API_HMAC_NO_KEY",
	1: "KEY_ID_API_HMAC_SHA_1_96",
	2: "KEY_ID_API_HMAC_SHA_256_128",
}

var HmacKeyID_value = map[string]uint8{
	"KEY_ID_API_HMAC_NO_KEY":      0,
	"KEY_ID_API_HMAC_SHA_1_96":    1,
	"KEY_ID_API_HMAC_SHA_256_128": 2,
}

func (x HmacKeyID) String() string {
	s, ok := HmacKeyID_name[uint8(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// IfStatusFlags represents VPP binary API enum 'if_status_flags'.
type IfStatusFlags uint32

const (
	IF_STATUS_API_FLAG_ADMIN_UP IfStatusFlags = 1
	IF_STATUS_API_FLAG_LINK_UP  IfStatusFlags = 2
)

var IfStatusFlags_name = map[uint32]string{
	1: "IF_STATUS_API_FLAG_ADMIN_UP",
	2: "IF_STATUS_API_FLAG_LINK_UP",
}

var IfStatusFlags_value = map[string]uint32{
	"IF_STATUS_API_FLAG_ADMIN_UP": 1,
	"IF_STATUS_API_FLAG_LINK_UP":  2,
}

func (x IfStatusFlags) String() string {
	s, ok := IfStatusFlags_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// IfType represents VPP binary API enum 'if_type'.
type IfType uint32

const (
	IF_API_TYPE_HARDWARE IfType = 0
	IF_API_TYPE_SUB      IfType = 1
	IF_API_TYPE_P2P      IfType = 2
	IF_API_TYPE_PIPE     IfType = 3
)

var IfType_name = map[uint32]string{
	0: "IF_API_TYPE_HARDWARE",
	1: "IF_API_TYPE_SUB",
	2: "IF_API_TYPE_P2P",
	3: "IF_API_TYPE_PIPE",
}

var IfType_value = map[string]uint32{
	"IF_API_TYPE_HARDWARE": 0,
	"IF_API_TYPE_SUB":      1,
	"IF_API_TYPE_P2P":      2,
	"IF_API_TYPE_PIPE":     3,
}

func (x IfType) String() string {
	s, ok := IfType_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// IPDscp represents VPP binary API enum 'ip_dscp'.
type IPDscp uint8

const (
	IP_API_DSCP_CS0  IPDscp = 0
	IP_API_DSCP_CS1  IPDscp = 8
	IP_API_DSCP_AF11 IPDscp = 10
	IP_API_DSCP_AF12 IPDscp = 12
	IP_API_DSCP_AF13 IPDscp = 14
	IP_API_DSCP_CS2  IPDscp = 16
	IP_API_DSCP_AF21 IPDscp = 18
	IP_API_DSCP_AF22 IPDscp = 20
	IP_API_DSCP_AF23 IPDscp = 22
	IP_API_DSCP_CS3  IPDscp = 24
	IP_API_DSCP_AF31 IPDscp = 26
	IP_API_DSCP_AF32 IPDscp = 28
	IP_API_DSCP_AF33 IPDscp = 30
	IP_API_DSCP_CS4  IPDscp = 32
	IP_API_DSCP_AF41 IPDscp = 34
	IP_API_DSCP_AF42 IPDscp = 36
	IP_API_DSCP_AF43 IPDscp = 38
	IP_API_DSCP_CS5  IPDscp = 40
	IP_API_DSCP_EF   IPDscp = 46
	IP_API_DSCP_CS6  IPDscp = 48
	IP_API_DSCP_CS7  IPDscp = 50
)

var IPDscp_name = map[uint8]string{
	0:  "IP_API_DSCP_CS0",
	8:  "IP_API_DSCP_CS1",
	10: "IP_API_DSCP_AF11",
	12: "IP_API_DSCP_AF12",
	14: "IP_API_DSCP_AF13",
	16: "IP_API_DSCP_CS2",
	18: "IP_API_DSCP_AF21",
	20: "IP_API_DSCP_AF22",
	22: "IP_API_DSCP_AF23",
	24: "IP_API_DSCP_CS3",
	26: "IP_API_DSCP_AF31",
	28: "IP_API_DSCP_AF32",
	30: "IP_API_DSCP_AF33",
	32: "IP_API_DSCP_CS4",
	34: "IP_API_DSCP_AF41",
	36: "IP_API_DSCP_AF42",
	38: "IP_API_DSCP_AF43",
	40: "IP_API_DSCP_CS5",
	46: "IP_API_DSCP_EF",
	48: "IP_API_DSCP_CS6",
	50: "IP_API_DSCP_CS7",
}

var IPDscp_value = map[string]uint8{
	"IP_API_DSCP_CS0":  0,
	"IP_API_DSCP_CS1":  8,
	"IP_API_DSCP_AF11": 10,
	"IP_API_DSCP_AF12": 12,
	"IP_API_DSCP_AF13": 14,
	"IP_API_DSCP_CS2":  16,
	"IP_API_DSCP_AF21": 18,
	"IP_API_DSCP_AF22": 20,
	"IP_API_DSCP_AF23": 22,
	"IP_API_DSCP_CS3":  24,
	"IP_API_DSCP_AF31": 26,
	"IP_API_DSCP_AF32": 28,
	"IP_API_DSCP_AF33": 30,
	"IP_API_DSCP_CS4":  32,
	"IP_API_DSCP_AF41": 34,
	"IP_API_DSCP_AF42": 36,
	"IP_API_DSCP_AF43": 38,
	"IP_API_DSCP_CS5":  40,
	"IP_API_DSCP_EF":   46,
	"IP_API_DSCP_CS6":  48,
	"IP_API_DSCP_CS7":  50,
}

func (x IPDscp) String() string {
	s, ok := IPDscp_name[uint8(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// IPEcn represents VPP binary API enum 'ip_ecn'.
type IPEcn uint8

const (
	IP_API_ECN_NONE IPEcn = 0
	IP_API_ECN_ECT0 IPEcn = 1
	IP_API_ECN_ECT1 IPEcn = 2
	IP_API_ECN_CE   IPEcn = 3
)

var IPEcn_name = map[uint8]string{
	0: "IP_API_ECN_NONE",
	1: "IP_API_ECN_ECT0",
	2: "IP_API_ECN_ECT1",
	3: "IP_API_ECN_CE",
}

var IPEcn_value = map[string]uint8{
	"IP_API_ECN_NONE": 0,
	"IP_API_ECN_ECT0": 1,
	"IP_API_ECN_ECT1": 2,
	"IP_API_ECN_CE":   3,
}

func (x IPEcn) String() string {
	s, ok := IPEcn_name[uint8(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// IPProto represents VPP binary API enum 'ip_proto'.
type IPProto uint8

const (
	IP_API_PROTO_HOPOPT   IPProto = 0
	IP_API_PROTO_ICMP     IPProto = 1
	IP_API_PROTO_IGMP     IPProto = 2
	IP_API_PROTO_TCP      IPProto = 6
	IP_API_PROTO_UDP      IPProto = 17
	IP_API_PROTO_GRE      IPProto = 47
	IP_API_PROTO_ESP      IPProto = 50
	IP_API_PROTO_AH       IPProto = 51
	IP_API_PROTO_ICMP6    IPProto = 58
	IP_API_PROTO_EIGRP    IPProto = 88
	IP_API_PROTO_OSPF     IPProto = 89
	IP_API_PROTO_SCTP     IPProto = 132
	IP_API_PROTO_RESERVED IPProto = 255
)

var IPProto_name = map[uint8]string{
	0:   "IP_API_PROTO_HOPOPT",
	1:   "IP_API_PROTO_ICMP",
	2:   "IP_API_PROTO_IGMP",
	6:   "IP_API_PROTO_TCP",
	17:  "IP_API_PROTO_UDP",
	47:  "IP_API_PROTO_GRE",
	50:  "IP_API_PROTO_ESP",
	51:  "IP_API_PROTO_AH",
	58:  "IP_API_PROTO_ICMP6",
	88:  "IP_API_PROTO_EIGRP",
	89:  "IP_API_PROTO_OSPF",
	132: "IP_API_PROTO_SCTP",
	255: "IP_API_PROTO_RESERVED",
}

var IPProto_value = map[string]uint8{
	"IP_API_PROTO_HOPOPT":   0,
	"IP_API_PROTO_ICMP":     1,
	"IP_API_PROTO_IGMP":     2,
	"IP_API_PROTO_TCP":      6,
	"IP_API_PROTO_UDP":      17,
	"IP_API_PROTO_GRE":      47,
	"IP_API_PROTO_ESP":      50,
	"IP_API_PROTO_AH":       51,
	"IP_API_PROTO_ICMP6":    58,
	"IP_API_PROTO_EIGRP":    88,
	"IP_API_PROTO_OSPF":     89,
	"IP_API_PROTO_SCTP":     132,
	"IP_API_PROTO_RESERVED": 255,
}

func (x IPProto) String() string {
	s, ok := IPProto_name[uint8(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// LinkDuplex represents VPP binary API enum 'link_duplex'.
type LinkDuplex uint32

const (
	LINK_DUPLEX_API_UNKNOWN LinkDuplex = 0
	LINK_DUPLEX_API_HALF    LinkDuplex = 1
	LINK_DUPLEX_API_FULL    LinkDuplex = 2
)

var LinkDuplex_name = map[uint32]string{
	0: "LINK_DUPLEX_API_UNKNOWN",
	1: "LINK_DUPLEX_API_HALF",
	2: "LINK_DUPLEX_API_FULL",
}

var LinkDuplex_value = map[string]uint32{
	"LINK_DUPLEX_API_UNKNOWN": 0,
	"LINK_DUPLEX_API_HALF":    1,
	"LINK_DUPLEX_API_FULL":    2,
}

func (x LinkDuplex) String() string {
	s, ok := LinkDuplex_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// MtuProto represents VPP binary API enum 'mtu_proto'.
type MtuProto uint32

const (
	MTU_PROTO_API_L3   MtuProto = 0
	MTU_PROTO_API_IP4  MtuProto = 1
	MTU_PROTO_API_IP6  MtuProto = 2
	MTU_PROTO_API_MPLS MtuProto = 3
)

var MtuProto_name = map[uint32]string{
	0: "MTU_PROTO_API_L3",
	1: "MTU_PROTO_API_IP4",
	2: "MTU_PROTO_API_IP6",
	3: "MTU_PROTO_API_MPLS",
}

var MtuProto_value = map[string]uint32{
	"MTU_PROTO_API_L3":   0,
	"MTU_PROTO_API_IP4":  1,
	"MTU_PROTO_API_IP6":  2,
	"MTU_PROTO_API_MPLS": 3,
}

func (x MtuProto) String() string {
	s, ok := MtuProto_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// OneFilter represents VPP binary API enum 'one_filter'.
type OneFilter uint32

const (
	ONE_FILTER_API_ALL    OneFilter = 0
	ONE_FILTER_API_LOCAL  OneFilter = 1
	ONE_FILTER_API_REMOTE OneFilter = 2
)

var OneFilter_name = map[uint32]string{
	0: "ONE_FILTER_API_ALL",
	1: "ONE_FILTER_API_LOCAL",
	2: "ONE_FILTER_API_REMOTE",
}

var OneFilter_value = map[string]uint32{
	"ONE_FILTER_API_ALL":    0,
	"ONE_FILTER_API_LOCAL":  1,
	"ONE_FILTER_API_REMOTE": 2,
}

func (x OneFilter) String() string {
	s, ok := OneFilter_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// OneMapMode represents VPP binary API enum 'one_map_mode'.
type OneMapMode uint32

const (
	ONE_MAP_MODE_API_DST_ONLY OneMapMode = 0
	ONE_MAP_MODE_API_SRC_DST  OneMapMode = 1
)

var OneMapMode_name = map[uint32]string{
	0: "ONE_MAP_MODE_API_DST_ONLY",
	1: "ONE_MAP_MODE_API_SRC_DST",
}

var OneMapMode_value = map[string]uint32{
	"ONE_MAP_MODE_API_DST_ONLY": 0,
	"ONE_MAP_MODE_API_SRC_DST":  1,
}

func (x OneMapMode) String() string {
	s, ok := OneMapMode_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// RxMode represents VPP binary API enum 'rx_mode'.
type RxMode uint32

const (
	RX_MODE_API_UNKNOWN   RxMode = 0
	RX_MODE_API_POLLING   RxMode = 1
	RX_MODE_API_INTERRUPT RxMode = 2
	RX_MODE_API_ADAPTIVE  RxMode = 3
	RX_MODE_API_DEFAULT   RxMode = 4
)

var RxMode_name = map[uint32]string{
	0: "RX_MODE_API_UNKNOWN",
	1: "RX_MODE_API_POLLING",
	2: "RX_MODE_API_INTERRUPT",
	3: "RX_MODE_API_ADAPTIVE",
	4: "RX_MODE_API_DEFAULT",
}

var RxMode_value = map[string]uint32{
	"RX_MODE_API_UNKNOWN":   0,
	"RX_MODE_API_POLLING":   1,
	"RX_MODE_API_INTERRUPT": 2,
	"RX_MODE_API_ADAPTIVE":  3,
	"RX_MODE_API_DEFAULT":   4,
}

func (x RxMode) String() string {
	s, ok := RxMode_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// SubIfFlags represents VPP binary API enum 'sub_if_flags'.
type SubIfFlags uint32

const (
	SUB_IF_API_FLAG_NO_TAGS           SubIfFlags = 1
	SUB_IF_API_FLAG_ONE_TAG           SubIfFlags = 2
	SUB_IF_API_FLAG_TWO_TAGS          SubIfFlags = 4
	SUB_IF_API_FLAG_DOT1AD            SubIfFlags = 8
	SUB_IF_API_FLAG_EXACT_MATCH       SubIfFlags = 16
	SUB_IF_API_FLAG_DEFAULT           SubIfFlags = 32
	SUB_IF_API_FLAG_OUTER_VLAN_ID_ANY SubIfFlags = 64
	SUB_IF_API_FLAG_INNER_VLAN_ID_ANY SubIfFlags = 128
	SUB_IF_API_FLAG_MASK_VNET         SubIfFlags = 254
	SUB_IF_API_FLAG_DOT1AH            SubIfFlags = 256
)

var SubIfFlags_name = map[uint32]string{
	1:   "SUB_IF_API_FLAG_NO_TAGS",
	2:   "SUB_IF_API_FLAG_ONE_TAG",
	4:   "SUB_IF_API_FLAG_TWO_TAGS",
	8:   "SUB_IF_API_FLAG_DOT1AD",
	16:  "SUB_IF_API_FLAG_EXACT_MATCH",
	32:  "SUB_IF_API_FLAG_DEFAULT",
	64:  "SUB_IF_API_FLAG_OUTER_VLAN_ID_ANY",
	128: "SUB_IF_API_FLAG_INNER_VLAN_ID_ANY",
	254: "SUB_IF_API_FLAG_MASK_VNET",
	256: "SUB_IF_API_FLAG_DOT1AH",
}

var SubIfFlags_value = map[string]uint32{
	"SUB_IF_API_FLAG_NO_TAGS":           1,
	"SUB_IF_API_FLAG_ONE_TAG":           2,
	"SUB_IF_API_FLAG_TWO_TAGS":          4,
	"SUB_IF_API_FLAG_DOT1AD":            8,
	"SUB_IF_API_FLAG_EXACT_MATCH":       16,
	"SUB_IF_API_FLAG_DEFAULT":           32,
	"SUB_IF_API_FLAG_OUTER_VLAN_ID_ANY": 64,
	"SUB_IF_API_FLAG_INNER_VLAN_ID_ANY": 128,
	"SUB_IF_API_FLAG_MASK_VNET":         254,
	"SUB_IF_API_FLAG_DOT1AH":            256,
}

func (x SubIfFlags) String() string {
	s, ok := SubIfFlags_name[uint32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}

// AddressWithPrefix represents VPP binary API alias 'address_with_prefix'.
type AddressWithPrefix Prefix

// InterfaceIndex represents VPP binary API alias 'interface_index'.
type InterfaceIndex uint32

// IP4Address represents VPP binary API alias 'ip4_address'.
type IP4Address [4]uint8

// IP4AddressWithPrefix represents VPP binary API alias 'ip4_address_with_prefix'.
type IP4AddressWithPrefix IP4Prefix

// IP6Address represents VPP binary API alias 'ip6_address'.
type IP6Address [16]uint8

// IP6AddressWithPrefix represents VPP binary API alias 'ip6_address_with_prefix'.
type IP6AddressWithPrefix IP6Prefix

// MacAddress represents VPP binary API alias 'mac_address'.
type MacAddress [6]uint8

// Address represents VPP binary API type 'address'.
type Address struct {
	Af AddressFamily
	Un AddressUnion
}

func (*Address) GetTypeName() string { return "address" }

// Eid represents VPP binary API type 'eid'.
type Eid struct {
	Type    EidType
	Address EidAddress
}

func (*Eid) GetTypeName() string { return "eid" }

// HmacKey represents VPP binary API type 'hmac_key'.
type HmacKey struct {
	ID  HmacKeyID
	Key []byte `struc:"[64]byte"`
}

func (*HmacKey) GetTypeName() string { return "hmac_key" }

// IP4Prefix represents VPP binary API type 'ip4_prefix'.
type IP4Prefix struct {
	Address IP4Address
	Len     uint8
}

func (*IP4Prefix) GetTypeName() string { return "ip4_prefix" }

// IP6Prefix represents VPP binary API type 'ip6_prefix'.
type IP6Prefix struct {
	Address IP6Address
	Len     uint8
}

func (*IP6Prefix) GetTypeName() string { return "ip6_prefix" }

// LocalLocator represents VPP binary API type 'local_locator'.
type LocalLocator struct {
	SwIfIndex InterfaceIndex
	Priority  uint8
	Weight    uint8
}

func (*LocalLocator) GetTypeName() string { return "local_locator" }

// Mprefix represents VPP binary API type 'mprefix'.
type Mprefix struct {
	Af               AddressFamily
	GrpAddressLength uint16
	GrpAddress       AddressUnion
	SrcAddress       AddressUnion
}

func (*Mprefix) GetTypeName() string { return "mprefix" }

// Nsh represents VPP binary API type 'nsh'.
type Nsh struct {
	Spi uint32
	Si  uint8
}

func (*Nsh) GetTypeName() string { return "nsh" }

// OneAdjacency represents VPP binary API type 'one_adjacency'.
type OneAdjacency struct {
	Reid Eid
	Leid Eid
}

func (*OneAdjacency) GetTypeName() string { return "one_adjacency" }

// OneL2ArpEntry represents VPP binary API type 'one_l2_arp_entry'.
type OneL2ArpEntry struct {
	Mac MacAddress
	IP4 IP4Address
}

func (*OneL2ArpEntry) GetTypeName() string { return "one_l2_arp_entry" }

// OneNdpEntry represents VPP binary API type 'one_ndp_entry'.
type OneNdpEntry struct {
	Mac MacAddress
	IP6 IP6Address
}

func (*OneNdpEntry) GetTypeName() string { return "one_ndp_entry" }

// Prefix represents VPP binary API type 'prefix'.
type Prefix struct {
	Address Address
	Len     uint8
}

func (*Prefix) GetTypeName() string { return "prefix" }

// PrefixMatcher represents VPP binary API type 'prefix_matcher'.
type PrefixMatcher struct {
	Le uint8
	Ge uint8
}

func (*PrefixMatcher) GetTypeName() string { return "prefix_matcher" }

// RemoteLocator represents VPP binary API type 'remote_locator'.
type RemoteLocator struct {
	Priority  uint8
	Weight    uint8
	IPAddress Address
}

func (*RemoteLocator) GetTypeName() string { return "remote_locator" }

// AddressUnion represents VPP binary API union 'address_union'.
type AddressUnion struct {
	XXX_UnionData [16]byte
}

func (*AddressUnion) GetTypeName() string { return "address_union" }

func AddressUnionIP4(a IP4Address) (u AddressUnion) {
	u.SetIP4(a)
	return
}
func (u *AddressUnion) SetIP4(a IP4Address) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.XXX_UnionData[:], b.Bytes())
}
func (u *AddressUnion) GetIP4() (a IP4Address) {
	var b = bytes.NewReader(u.XXX_UnionData[:])
	struc.Unpack(b, &a)
	return
}

func AddressUnionIP6(a IP6Address) (u AddressUnion) {
	u.SetIP6(a)
	return
}
func (u *AddressUnion) SetIP6(a IP6Address) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.XXX_UnionData[:], b.Bytes())
}
func (u *AddressUnion) GetIP6() (a IP6Address) {
	var b = bytes.NewReader(u.XXX_UnionData[:])
	struc.Unpack(b, &a)
	return
}

// EidAddress represents VPP binary API union 'eid_address'.
type EidAddress struct {
	XXX_UnionData [6]byte
}

func (*EidAddress) GetTypeName() string { return "eid_address" }

func EidAddressPrefix(a Prefix) (u EidAddress) {
	u.SetPrefix(a)
	return
}
func (u *EidAddress) SetPrefix(a Prefix) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.XXX_UnionData[:], b.Bytes())
}
func (u *EidAddress) GetPrefix() (a Prefix) {
	var b = bytes.NewReader(u.XXX_UnionData[:])
	struc.Unpack(b, &a)
	return
}

func EidAddressMac(a MacAddress) (u EidAddress) {
	u.SetMac(a)
	return
}
func (u *EidAddress) SetMac(a MacAddress) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.XXX_UnionData[:], b.Bytes())
}
func (u *EidAddress) GetMac() (a MacAddress) {
	var b = bytes.NewReader(u.XXX_UnionData[:])
	struc.Unpack(b, &a)
	return
}

func EidAddressNsh(a Nsh) (u EidAddress) {
	u.SetNsh(a)
	return
}
func (u *EidAddress) SetNsh(a Nsh) {
	var b = new(bytes.Buffer)
	if err := struc.Pack(b, &a); err != nil {
		return
	}
	copy(u.XXX_UnionData[:], b.Bytes())
}
func (u *EidAddress) GetNsh() (a Nsh) {
	var b = bytes.NewReader(u.XXX_UnionData[:])
	struc.Unpack(b, &a)
	return
}

// OneAddDelAdjacency represents VPP binary API message 'one_add_del_adjacency'.
type OneAddDelAdjacency struct {
	IsAdd uint8
	Vni   uint32
	Reid  Eid
	Leid  Eid
}

func (m *OneAddDelAdjacency) Reset()                        { *m = OneAddDelAdjacency{} }
func (*OneAddDelAdjacency) GetMessageName() string          { return "one_add_del_adjacency" }
func (*OneAddDelAdjacency) GetCrcString() string            { return "e48e7afe" }
func (*OneAddDelAdjacency) GetMessageType() api.MessageType { return api.RequestMessage }

// OneAddDelAdjacencyReply represents VPP binary API message 'one_add_del_adjacency_reply'.
type OneAddDelAdjacencyReply struct {
	Retval int32
}

func (m *OneAddDelAdjacencyReply) Reset()                        { *m = OneAddDelAdjacencyReply{} }
func (*OneAddDelAdjacencyReply) GetMessageName() string          { return "one_add_del_adjacency_reply" }
func (*OneAddDelAdjacencyReply) GetCrcString() string            { return "e8d4e804" }
func (*OneAddDelAdjacencyReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneAddDelL2ArpEntry represents VPP binary API message 'one_add_del_l2_arp_entry'.
type OneAddDelL2ArpEntry struct {
	IsAdd bool
	Bd    uint32
	Entry OneL2ArpEntry
}

func (m *OneAddDelL2ArpEntry) Reset()                        { *m = OneAddDelL2ArpEntry{} }
func (*OneAddDelL2ArpEntry) GetMessageName() string          { return "one_add_del_l2_arp_entry" }
func (*OneAddDelL2ArpEntry) GetCrcString() string            { return "33209078" }
func (*OneAddDelL2ArpEntry) GetMessageType() api.MessageType { return api.RequestMessage }

// OneAddDelL2ArpEntryReply represents VPP binary API message 'one_add_del_l2_arp_entry_reply'.
type OneAddDelL2ArpEntryReply struct {
	Retval int32
}

func (m *OneAddDelL2ArpEntryReply) Reset()                        { *m = OneAddDelL2ArpEntryReply{} }
func (*OneAddDelL2ArpEntryReply) GetMessageName() string          { return "one_add_del_l2_arp_entry_reply" }
func (*OneAddDelL2ArpEntryReply) GetCrcString() string            { return "e8d4e804" }
func (*OneAddDelL2ArpEntryReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneAddDelLocalEid represents VPP binary API message 'one_add_del_local_eid'.
type OneAddDelLocalEid struct {
	IsAdd          bool
	Eid            Eid
	LocatorSetName string `struc:"[64]byte"`
	Vni            uint32
	Key            HmacKey
}

func (m *OneAddDelLocalEid) Reset()                        { *m = OneAddDelLocalEid{} }
func (*OneAddDelLocalEid) GetMessageName() string          { return "one_add_del_local_eid" }
func (*OneAddDelLocalEid) GetCrcString() string            { return "21f573bd" }
func (*OneAddDelLocalEid) GetMessageType() api.MessageType { return api.RequestMessage }

// OneAddDelLocalEidReply represents VPP binary API message 'one_add_del_local_eid_reply'.
type OneAddDelLocalEidReply struct {
	Retval int32
}

func (m *OneAddDelLocalEidReply) Reset()                        { *m = OneAddDelLocalEidReply{} }
func (*OneAddDelLocalEidReply) GetMessageName() string          { return "one_add_del_local_eid_reply" }
func (*OneAddDelLocalEidReply) GetCrcString() string            { return "e8d4e804" }
func (*OneAddDelLocalEidReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneAddDelLocator represents VPP binary API message 'one_add_del_locator'.
type OneAddDelLocator struct {
	IsAdd          bool
	LocatorSetName string `struc:"[64]byte"`
	SwIfIndex      InterfaceIndex
	Priority       uint8
	Weight         uint8
}

func (m *OneAddDelLocator) Reset()                        { *m = OneAddDelLocator{} }
func (*OneAddDelLocator) GetMessageName() string          { return "one_add_del_locator" }
func (*OneAddDelLocator) GetCrcString() string            { return "af4d8f13" }
func (*OneAddDelLocator) GetMessageType() api.MessageType { return api.RequestMessage }

// OneAddDelLocatorReply represents VPP binary API message 'one_add_del_locator_reply'.
type OneAddDelLocatorReply struct {
	Retval int32
}

func (m *OneAddDelLocatorReply) Reset()                        { *m = OneAddDelLocatorReply{} }
func (*OneAddDelLocatorReply) GetMessageName() string          { return "one_add_del_locator_reply" }
func (*OneAddDelLocatorReply) GetCrcString() string            { return "e8d4e804" }
func (*OneAddDelLocatorReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneAddDelLocatorSet represents VPP binary API message 'one_add_del_locator_set'.
type OneAddDelLocatorSet struct {
	IsAdd          bool
	LocatorSetName string `struc:"[64]byte"`
	LocatorNum     uint32 `struc:"sizeof=Locators"`
	Locators       []LocalLocator
}

func (m *OneAddDelLocatorSet) Reset()                        { *m = OneAddDelLocatorSet{} }
func (*OneAddDelLocatorSet) GetMessageName() string          { return "one_add_del_locator_set" }
func (*OneAddDelLocatorSet) GetCrcString() string            { return "6fcd6471" }
func (*OneAddDelLocatorSet) GetMessageType() api.MessageType { return api.RequestMessage }

// OneAddDelLocatorSetReply represents VPP binary API message 'one_add_del_locator_set_reply'.
type OneAddDelLocatorSetReply struct {
	Retval  int32
	LsIndex uint32
}

func (m *OneAddDelLocatorSetReply) Reset()                        { *m = OneAddDelLocatorSetReply{} }
func (*OneAddDelLocatorSetReply) GetMessageName() string          { return "one_add_del_locator_set_reply" }
func (*OneAddDelLocatorSetReply) GetCrcString() string            { return "b6666db4" }
func (*OneAddDelLocatorSetReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneAddDelMapRequestItrRlocs represents VPP binary API message 'one_add_del_map_request_itr_rlocs'.
type OneAddDelMapRequestItrRlocs struct {
	IsAdd          bool
	LocatorSetName string `struc:"[64]byte"`
}

func (m *OneAddDelMapRequestItrRlocs) Reset() { *m = OneAddDelMapRequestItrRlocs{} }
func (*OneAddDelMapRequestItrRlocs) GetMessageName() string {
	return "one_add_del_map_request_itr_rlocs"
}
func (*OneAddDelMapRequestItrRlocs) GetCrcString() string            { return "6be88e45" }
func (*OneAddDelMapRequestItrRlocs) GetMessageType() api.MessageType { return api.RequestMessage }

// OneAddDelMapRequestItrRlocsReply represents VPP binary API message 'one_add_del_map_request_itr_rlocs_reply'.
type OneAddDelMapRequestItrRlocsReply struct {
	Retval int32
}

func (m *OneAddDelMapRequestItrRlocsReply) Reset() { *m = OneAddDelMapRequestItrRlocsReply{} }
func (*OneAddDelMapRequestItrRlocsReply) GetMessageName() string {
	return "one_add_del_map_request_itr_rlocs_reply"
}
func (*OneAddDelMapRequestItrRlocsReply) GetCrcString() string            { return "e8d4e804" }
func (*OneAddDelMapRequestItrRlocsReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneAddDelMapResolver represents VPP binary API message 'one_add_del_map_resolver'.
type OneAddDelMapResolver struct {
	IsAdd     bool
	IPAddress Address
}

func (m *OneAddDelMapResolver) Reset()                        { *m = OneAddDelMapResolver{} }
func (*OneAddDelMapResolver) GetMessageName() string          { return "one_add_del_map_resolver" }
func (*OneAddDelMapResolver) GetCrcString() string            { return "6598ea7c" }
func (*OneAddDelMapResolver) GetMessageType() api.MessageType { return api.RequestMessage }

// OneAddDelMapResolverReply represents VPP binary API message 'one_add_del_map_resolver_reply'.
type OneAddDelMapResolverReply struct {
	Retval int32
}

func (m *OneAddDelMapResolverReply) Reset()                        { *m = OneAddDelMapResolverReply{} }
func (*OneAddDelMapResolverReply) GetMessageName() string          { return "one_add_del_map_resolver_reply" }
func (*OneAddDelMapResolverReply) GetCrcString() string            { return "e8d4e804" }
func (*OneAddDelMapResolverReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneAddDelMapServer represents VPP binary API message 'one_add_del_map_server'.
type OneAddDelMapServer struct {
	IsAdd     bool
	IPAddress Address
}

func (m *OneAddDelMapServer) Reset()                        { *m = OneAddDelMapServer{} }
func (*OneAddDelMapServer) GetMessageName() string          { return "one_add_del_map_server" }
func (*OneAddDelMapServer) GetCrcString() string            { return "6598ea7c" }
func (*OneAddDelMapServer) GetMessageType() api.MessageType { return api.RequestMessage }

// OneAddDelMapServerReply represents VPP binary API message 'one_add_del_map_server_reply'.
type OneAddDelMapServerReply struct {
	Retval int32
}

func (m *OneAddDelMapServerReply) Reset()                        { *m = OneAddDelMapServerReply{} }
func (*OneAddDelMapServerReply) GetMessageName() string          { return "one_add_del_map_server_reply" }
func (*OneAddDelMapServerReply) GetCrcString() string            { return "e8d4e804" }
func (*OneAddDelMapServerReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneAddDelNdpEntry represents VPP binary API message 'one_add_del_ndp_entry'.
type OneAddDelNdpEntry struct {
	IsAdd bool
	Bd    uint32
	Entry OneNdpEntry
}

func (m *OneAddDelNdpEntry) Reset()                        { *m = OneAddDelNdpEntry{} }
func (*OneAddDelNdpEntry) GetMessageName() string          { return "one_add_del_ndp_entry" }
func (*OneAddDelNdpEntry) GetCrcString() string            { return "d1629a2f" }
func (*OneAddDelNdpEntry) GetMessageType() api.MessageType { return api.RequestMessage }

// OneAddDelNdpEntryReply represents VPP binary API message 'one_add_del_ndp_entry_reply'.
type OneAddDelNdpEntryReply struct {
	Retval int32
}

func (m *OneAddDelNdpEntryReply) Reset()                        { *m = OneAddDelNdpEntryReply{} }
func (*OneAddDelNdpEntryReply) GetMessageName() string          { return "one_add_del_ndp_entry_reply" }
func (*OneAddDelNdpEntryReply) GetCrcString() string            { return "e8d4e804" }
func (*OneAddDelNdpEntryReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneAddDelRemoteMapping represents VPP binary API message 'one_add_del_remote_mapping'.
type OneAddDelRemoteMapping struct {
	IsAdd    bool
	IsSrcDst bool
	DelAll   bool
	Vni      uint32
	Action   uint8
	Deid     Eid
	Seid     Eid
	RlocNum  uint32 `struc:"sizeof=Rlocs"`
	Rlocs    []RemoteLocator
}

func (m *OneAddDelRemoteMapping) Reset()                        { *m = OneAddDelRemoteMapping{} }
func (*OneAddDelRemoteMapping) GetMessageName() string          { return "one_add_del_remote_mapping" }
func (*OneAddDelRemoteMapping) GetCrcString() string            { return "fae8ed77" }
func (*OneAddDelRemoteMapping) GetMessageType() api.MessageType { return api.RequestMessage }

// OneAddDelRemoteMappingReply represents VPP binary API message 'one_add_del_remote_mapping_reply'.
type OneAddDelRemoteMappingReply struct {
	Retval int32
}

func (m *OneAddDelRemoteMappingReply) Reset() { *m = OneAddDelRemoteMappingReply{} }
func (*OneAddDelRemoteMappingReply) GetMessageName() string {
	return "one_add_del_remote_mapping_reply"
}
func (*OneAddDelRemoteMappingReply) GetCrcString() string            { return "e8d4e804" }
func (*OneAddDelRemoteMappingReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneAdjacenciesGet represents VPP binary API message 'one_adjacencies_get'.
type OneAdjacenciesGet struct {
	Vni uint32
}

func (m *OneAdjacenciesGet) Reset()                        { *m = OneAdjacenciesGet{} }
func (*OneAdjacenciesGet) GetMessageName() string          { return "one_adjacencies_get" }
func (*OneAdjacenciesGet) GetCrcString() string            { return "8d1f2fe9" }
func (*OneAdjacenciesGet) GetMessageType() api.MessageType { return api.RequestMessage }

// OneAdjacenciesGetReply represents VPP binary API message 'one_adjacencies_get_reply'.
type OneAdjacenciesGetReply struct {
	Retval      int32
	Count       uint32 `struc:"sizeof=Adjacencies"`
	Adjacencies []OneAdjacency
}

func (m *OneAdjacenciesGetReply) Reset()                        { *m = OneAdjacenciesGetReply{} }
func (*OneAdjacenciesGetReply) GetMessageName() string          { return "one_adjacencies_get_reply" }
func (*OneAdjacenciesGetReply) GetCrcString() string            { return "a8ed89a5" }
func (*OneAdjacenciesGetReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneEidTableAddDelMap represents VPP binary API message 'one_eid_table_add_del_map'.
type OneEidTableAddDelMap struct {
	IsAdd   bool
	Vni     uint32
	DpTable uint32
	IsL2    bool
}

func (m *OneEidTableAddDelMap) Reset()                        { *m = OneEidTableAddDelMap{} }
func (*OneEidTableAddDelMap) GetMessageName() string          { return "one_eid_table_add_del_map" }
func (*OneEidTableAddDelMap) GetCrcString() string            { return "9481416b" }
func (*OneEidTableAddDelMap) GetMessageType() api.MessageType { return api.RequestMessage }

// OneEidTableAddDelMapReply represents VPP binary API message 'one_eid_table_add_del_map_reply'.
type OneEidTableAddDelMapReply struct {
	Retval int32
}

func (m *OneEidTableAddDelMapReply) Reset()                        { *m = OneEidTableAddDelMapReply{} }
func (*OneEidTableAddDelMapReply) GetMessageName() string          { return "one_eid_table_add_del_map_reply" }
func (*OneEidTableAddDelMapReply) GetCrcString() string            { return "e8d4e804" }
func (*OneEidTableAddDelMapReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneEidTableDetails represents VPP binary API message 'one_eid_table_details'.
type OneEidTableDetails struct {
	LocatorSetIndex uint32
	Action          uint8
	IsLocal         bool
	IsSrcDst        bool
	Vni             uint32
	Deid            Eid
	Seid            Eid
	TTL             uint32
	Authoritative   uint8
	Key             HmacKey
}

func (m *OneEidTableDetails) Reset()                        { *m = OneEidTableDetails{} }
func (*OneEidTableDetails) GetMessageName() string          { return "one_eid_table_details" }
func (*OneEidTableDetails) GetCrcString() string            { return "4bc32e3a" }
func (*OneEidTableDetails) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneEidTableDump represents VPP binary API message 'one_eid_table_dump'.
type OneEidTableDump struct {
	EidSet bool
	Vni    uint32
	Eid    Eid
	Filter OneFilter
}

func (m *OneEidTableDump) Reset()                        { *m = OneEidTableDump{} }
func (*OneEidTableDump) GetMessageName() string          { return "one_eid_table_dump" }
func (*OneEidTableDump) GetCrcString() string            { return "95151038" }
func (*OneEidTableDump) GetMessageType() api.MessageType { return api.RequestMessage }

// OneEidTableMapDetails represents VPP binary API message 'one_eid_table_map_details'.
type OneEidTableMapDetails struct {
	Vni     uint32
	DpTable uint32
}

func (m *OneEidTableMapDetails) Reset()                        { *m = OneEidTableMapDetails{} }
func (*OneEidTableMapDetails) GetMessageName() string          { return "one_eid_table_map_details" }
func (*OneEidTableMapDetails) GetCrcString() string            { return "0b6859e2" }
func (*OneEidTableMapDetails) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneEidTableMapDump represents VPP binary API message 'one_eid_table_map_dump'.
type OneEidTableMapDump struct {
	IsL2 bool
}

func (m *OneEidTableMapDump) Reset()                        { *m = OneEidTableMapDump{} }
func (*OneEidTableMapDump) GetMessageName() string          { return "one_eid_table_map_dump" }
func (*OneEidTableMapDump) GetCrcString() string            { return "d6cf0c3d" }
func (*OneEidTableMapDump) GetMessageType() api.MessageType { return api.RequestMessage }

// OneEidTableVniDetails represents VPP binary API message 'one_eid_table_vni_details'.
type OneEidTableVniDetails struct {
	Vni uint32
}

func (m *OneEidTableVniDetails) Reset()                        { *m = OneEidTableVniDetails{} }
func (*OneEidTableVniDetails) GetMessageName() string          { return "one_eid_table_vni_details" }
func (*OneEidTableVniDetails) GetCrcString() string            { return "64abc01e" }
func (*OneEidTableVniDetails) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneEidTableVniDump represents VPP binary API message 'one_eid_table_vni_dump'.
type OneEidTableVniDump struct{}

func (m *OneEidTableVniDump) Reset()                        { *m = OneEidTableVniDump{} }
func (*OneEidTableVniDump) GetMessageName() string          { return "one_eid_table_vni_dump" }
func (*OneEidTableVniDump) GetCrcString() string            { return "51077d14" }
func (*OneEidTableVniDump) GetMessageType() api.MessageType { return api.RequestMessage }

// OneEnableDisable represents VPP binary API message 'one_enable_disable'.
type OneEnableDisable struct {
	IsEnable bool
}

func (m *OneEnableDisable) Reset()                        { *m = OneEnableDisable{} }
func (*OneEnableDisable) GetMessageName() string          { return "one_enable_disable" }
func (*OneEnableDisable) GetCrcString() string            { return "c264d7bf" }
func (*OneEnableDisable) GetMessageType() api.MessageType { return api.RequestMessage }

// OneEnableDisablePetrMode represents VPP binary API message 'one_enable_disable_petr_mode'.
type OneEnableDisablePetrMode struct {
	IsEnable bool
}

func (m *OneEnableDisablePetrMode) Reset()                        { *m = OneEnableDisablePetrMode{} }
func (*OneEnableDisablePetrMode) GetMessageName() string          { return "one_enable_disable_petr_mode" }
func (*OneEnableDisablePetrMode) GetCrcString() string            { return "c264d7bf" }
func (*OneEnableDisablePetrMode) GetMessageType() api.MessageType { return api.RequestMessage }

// OneEnableDisablePetrModeReply represents VPP binary API message 'one_enable_disable_petr_mode_reply'.
type OneEnableDisablePetrModeReply struct {
	Retval int32
}

func (m *OneEnableDisablePetrModeReply) Reset() { *m = OneEnableDisablePetrModeReply{} }
func (*OneEnableDisablePetrModeReply) GetMessageName() string {
	return "one_enable_disable_petr_mode_reply"
}
func (*OneEnableDisablePetrModeReply) GetCrcString() string            { return "e8d4e804" }
func (*OneEnableDisablePetrModeReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneEnableDisablePitrMode represents VPP binary API message 'one_enable_disable_pitr_mode'.
type OneEnableDisablePitrMode struct {
	IsEnable bool
}

func (m *OneEnableDisablePitrMode) Reset()                        { *m = OneEnableDisablePitrMode{} }
func (*OneEnableDisablePitrMode) GetMessageName() string          { return "one_enable_disable_pitr_mode" }
func (*OneEnableDisablePitrMode) GetCrcString() string            { return "c264d7bf" }
func (*OneEnableDisablePitrMode) GetMessageType() api.MessageType { return api.RequestMessage }

// OneEnableDisablePitrModeReply represents VPP binary API message 'one_enable_disable_pitr_mode_reply'.
type OneEnableDisablePitrModeReply struct {
	Retval int32
}

func (m *OneEnableDisablePitrModeReply) Reset() { *m = OneEnableDisablePitrModeReply{} }
func (*OneEnableDisablePitrModeReply) GetMessageName() string {
	return "one_enable_disable_pitr_mode_reply"
}
func (*OneEnableDisablePitrModeReply) GetCrcString() string            { return "e8d4e804" }
func (*OneEnableDisablePitrModeReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneEnableDisableReply represents VPP binary API message 'one_enable_disable_reply'.
type OneEnableDisableReply struct {
	Retval int32
}

func (m *OneEnableDisableReply) Reset()                        { *m = OneEnableDisableReply{} }
func (*OneEnableDisableReply) GetMessageName() string          { return "one_enable_disable_reply" }
func (*OneEnableDisableReply) GetCrcString() string            { return "e8d4e804" }
func (*OneEnableDisableReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneEnableDisableXtrMode represents VPP binary API message 'one_enable_disable_xtr_mode'.
type OneEnableDisableXtrMode struct {
	IsEnable bool
}

func (m *OneEnableDisableXtrMode) Reset()                        { *m = OneEnableDisableXtrMode{} }
func (*OneEnableDisableXtrMode) GetMessageName() string          { return "one_enable_disable_xtr_mode" }
func (*OneEnableDisableXtrMode) GetCrcString() string            { return "c264d7bf" }
func (*OneEnableDisableXtrMode) GetMessageType() api.MessageType { return api.RequestMessage }

// OneEnableDisableXtrModeReply represents VPP binary API message 'one_enable_disable_xtr_mode_reply'.
type OneEnableDisableXtrModeReply struct {
	Retval int32
}

func (m *OneEnableDisableXtrModeReply) Reset() { *m = OneEnableDisableXtrModeReply{} }
func (*OneEnableDisableXtrModeReply) GetMessageName() string {
	return "one_enable_disable_xtr_mode_reply"
}
func (*OneEnableDisableXtrModeReply) GetCrcString() string            { return "e8d4e804" }
func (*OneEnableDisableXtrModeReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneGetMapRequestItrRlocs represents VPP binary API message 'one_get_map_request_itr_rlocs'.
type OneGetMapRequestItrRlocs struct{}

func (m *OneGetMapRequestItrRlocs) Reset()                        { *m = OneGetMapRequestItrRlocs{} }
func (*OneGetMapRequestItrRlocs) GetMessageName() string          { return "one_get_map_request_itr_rlocs" }
func (*OneGetMapRequestItrRlocs) GetCrcString() string            { return "51077d14" }
func (*OneGetMapRequestItrRlocs) GetMessageType() api.MessageType { return api.RequestMessage }

// OneGetMapRequestItrRlocsReply represents VPP binary API message 'one_get_map_request_itr_rlocs_reply'.
type OneGetMapRequestItrRlocsReply struct {
	Retval         int32
	LocatorSetName string `struc:"[64]byte"`
}

func (m *OneGetMapRequestItrRlocsReply) Reset() { *m = OneGetMapRequestItrRlocsReply{} }
func (*OneGetMapRequestItrRlocsReply) GetMessageName() string {
	return "one_get_map_request_itr_rlocs_reply"
}
func (*OneGetMapRequestItrRlocsReply) GetCrcString() string            { return "76580f3a" }
func (*OneGetMapRequestItrRlocsReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneGetTransportProtocol represents VPP binary API message 'one_get_transport_protocol'.
type OneGetTransportProtocol struct{}

func (m *OneGetTransportProtocol) Reset()                        { *m = OneGetTransportProtocol{} }
func (*OneGetTransportProtocol) GetMessageName() string          { return "one_get_transport_protocol" }
func (*OneGetTransportProtocol) GetCrcString() string            { return "51077d14" }
func (*OneGetTransportProtocol) GetMessageType() api.MessageType { return api.RequestMessage }

// OneGetTransportProtocolReply represents VPP binary API message 'one_get_transport_protocol_reply'.
type OneGetTransportProtocolReply struct {
	Retval   int32
	Protocol uint8
}

func (m *OneGetTransportProtocolReply) Reset() { *m = OneGetTransportProtocolReply{} }
func (*OneGetTransportProtocolReply) GetMessageName() string {
	return "one_get_transport_protocol_reply"
}
func (*OneGetTransportProtocolReply) GetCrcString() string            { return "62a28eb3" }
func (*OneGetTransportProtocolReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneL2ArpBdGet represents VPP binary API message 'one_l2_arp_bd_get'.
type OneL2ArpBdGet struct{}

func (m *OneL2ArpBdGet) Reset()                        { *m = OneL2ArpBdGet{} }
func (*OneL2ArpBdGet) GetMessageName() string          { return "one_l2_arp_bd_get" }
func (*OneL2ArpBdGet) GetCrcString() string            { return "51077d14" }
func (*OneL2ArpBdGet) GetMessageType() api.MessageType { return api.RequestMessage }

// OneL2ArpBdGetReply represents VPP binary API message 'one_l2_arp_bd_get_reply'.
type OneL2ArpBdGetReply struct {
	Retval        int32
	Count         uint32 `struc:"sizeof=BridgeDomains"`
	BridgeDomains []uint32
}

func (m *OneL2ArpBdGetReply) Reset()                        { *m = OneL2ArpBdGetReply{} }
func (*OneL2ArpBdGetReply) GetMessageName() string          { return "one_l2_arp_bd_get_reply" }
func (*OneL2ArpBdGetReply) GetCrcString() string            { return "221ac888" }
func (*OneL2ArpBdGetReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneL2ArpEntriesGet represents VPP binary API message 'one_l2_arp_entries_get'.
type OneL2ArpEntriesGet struct {
	Bd uint32
}

func (m *OneL2ArpEntriesGet) Reset()                        { *m = OneL2ArpEntriesGet{} }
func (*OneL2ArpEntriesGet) GetMessageName() string          { return "one_l2_arp_entries_get" }
func (*OneL2ArpEntriesGet) GetCrcString() string            { return "4d418cf4" }
func (*OneL2ArpEntriesGet) GetMessageType() api.MessageType { return api.RequestMessage }

// OneL2ArpEntriesGetReply represents VPP binary API message 'one_l2_arp_entries_get_reply'.
type OneL2ArpEntriesGetReply struct {
	Retval  int32
	Count   uint32 `struc:"sizeof=Entries"`
	Entries []OneL2ArpEntry
}

func (m *OneL2ArpEntriesGetReply) Reset()                        { *m = OneL2ArpEntriesGetReply{} }
func (*OneL2ArpEntriesGetReply) GetMessageName() string          { return "one_l2_arp_entries_get_reply" }
func (*OneL2ArpEntriesGetReply) GetCrcString() string            { return "b0a47bbe" }
func (*OneL2ArpEntriesGetReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneLocatorDetails represents VPP binary API message 'one_locator_details'.
type OneLocatorDetails struct {
	Local     uint8
	SwIfIndex InterfaceIndex
	IPAddress Address
	Priority  uint8
	Weight    uint8
}

func (m *OneLocatorDetails) Reset()                        { *m = OneLocatorDetails{} }
func (*OneLocatorDetails) GetMessageName() string          { return "one_locator_details" }
func (*OneLocatorDetails) GetCrcString() string            { return "c0c4c2a7" }
func (*OneLocatorDetails) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneLocatorDump represents VPP binary API message 'one_locator_dump'.
type OneLocatorDump struct {
	LsIndex    uint32
	LsName     string `struc:"[64]byte"`
	IsIndexSet bool
}

func (m *OneLocatorDump) Reset()                        { *m = OneLocatorDump{} }
func (*OneLocatorDump) GetMessageName() string          { return "one_locator_dump" }
func (*OneLocatorDump) GetCrcString() string            { return "9b11076c" }
func (*OneLocatorDump) GetMessageType() api.MessageType { return api.RequestMessage }

// OneLocatorSetDetails represents VPP binary API message 'one_locator_set_details'.
type OneLocatorSetDetails struct {
	LsIndex uint32
	LsName  string `struc:"[64]byte"`
}

func (m *OneLocatorSetDetails) Reset()                        { *m = OneLocatorSetDetails{} }
func (*OneLocatorSetDetails) GetMessageName() string          { return "one_locator_set_details" }
func (*OneLocatorSetDetails) GetCrcString() string            { return "5b33a105" }
func (*OneLocatorSetDetails) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneLocatorSetDump represents VPP binary API message 'one_locator_set_dump'.
type OneLocatorSetDump struct {
	Filter OneFilter
}

func (m *OneLocatorSetDump) Reset()                        { *m = OneLocatorSetDump{} }
func (*OneLocatorSetDump) GetMessageName() string          { return "one_locator_set_dump" }
func (*OneLocatorSetDump) GetCrcString() string            { return "71190768" }
func (*OneLocatorSetDump) GetMessageType() api.MessageType { return api.RequestMessage }

// OneMapRegisterEnableDisable represents VPP binary API message 'one_map_register_enable_disable'.
type OneMapRegisterEnableDisable struct {
	IsEnable bool
}

func (m *OneMapRegisterEnableDisable) Reset()                        { *m = OneMapRegisterEnableDisable{} }
func (*OneMapRegisterEnableDisable) GetMessageName() string          { return "one_map_register_enable_disable" }
func (*OneMapRegisterEnableDisable) GetCrcString() string            { return "c264d7bf" }
func (*OneMapRegisterEnableDisable) GetMessageType() api.MessageType { return api.RequestMessage }

// OneMapRegisterEnableDisableReply represents VPP binary API message 'one_map_register_enable_disable_reply'.
type OneMapRegisterEnableDisableReply struct {
	Retval int32
}

func (m *OneMapRegisterEnableDisableReply) Reset() { *m = OneMapRegisterEnableDisableReply{} }
func (*OneMapRegisterEnableDisableReply) GetMessageName() string {
	return "one_map_register_enable_disable_reply"
}
func (*OneMapRegisterEnableDisableReply) GetCrcString() string            { return "e8d4e804" }
func (*OneMapRegisterEnableDisableReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneMapRegisterFallbackThreshold represents VPP binary API message 'one_map_register_fallback_threshold'.
type OneMapRegisterFallbackThreshold struct {
	Value uint32
}

func (m *OneMapRegisterFallbackThreshold) Reset() { *m = OneMapRegisterFallbackThreshold{} }
func (*OneMapRegisterFallbackThreshold) GetMessageName() string {
	return "one_map_register_fallback_threshold"
}
func (*OneMapRegisterFallbackThreshold) GetCrcString() string            { return "f7d4a475" }
func (*OneMapRegisterFallbackThreshold) GetMessageType() api.MessageType { return api.RequestMessage }

// OneMapRegisterFallbackThresholdReply represents VPP binary API message 'one_map_register_fallback_threshold_reply'.
type OneMapRegisterFallbackThresholdReply struct {
	Retval int32
}

func (m *OneMapRegisterFallbackThresholdReply) Reset() { *m = OneMapRegisterFallbackThresholdReply{} }
func (*OneMapRegisterFallbackThresholdReply) GetMessageName() string {
	return "one_map_register_fallback_threshold_reply"
}
func (*OneMapRegisterFallbackThresholdReply) GetCrcString() string { return "e8d4e804" }
func (*OneMapRegisterFallbackThresholdReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// OneMapRegisterSetTTL represents VPP binary API message 'one_map_register_set_ttl'.
type OneMapRegisterSetTTL struct {
	TTL uint32
}

func (m *OneMapRegisterSetTTL) Reset()                        { *m = OneMapRegisterSetTTL{} }
func (*OneMapRegisterSetTTL) GetMessageName() string          { return "one_map_register_set_ttl" }
func (*OneMapRegisterSetTTL) GetCrcString() string            { return "dd59f1f3" }
func (*OneMapRegisterSetTTL) GetMessageType() api.MessageType { return api.RequestMessage }

// OneMapRegisterSetTTLReply represents VPP binary API message 'one_map_register_set_ttl_reply'.
type OneMapRegisterSetTTLReply struct {
	Retval int32
}

func (m *OneMapRegisterSetTTLReply) Reset()                        { *m = OneMapRegisterSetTTLReply{} }
func (*OneMapRegisterSetTTLReply) GetMessageName() string          { return "one_map_register_set_ttl_reply" }
func (*OneMapRegisterSetTTLReply) GetCrcString() string            { return "e8d4e804" }
func (*OneMapRegisterSetTTLReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneMapRequestMode represents VPP binary API message 'one_map_request_mode'.
type OneMapRequestMode struct {
	Mode OneMapMode
}

func (m *OneMapRequestMode) Reset()                        { *m = OneMapRequestMode{} }
func (*OneMapRequestMode) GetMessageName() string          { return "one_map_request_mode" }
func (*OneMapRequestMode) GetCrcString() string            { return "ffa5d2f5" }
func (*OneMapRequestMode) GetMessageType() api.MessageType { return api.RequestMessage }

// OneMapRequestModeReply represents VPP binary API message 'one_map_request_mode_reply'.
type OneMapRequestModeReply struct {
	Retval int32
}

func (m *OneMapRequestModeReply) Reset()                        { *m = OneMapRequestModeReply{} }
func (*OneMapRequestModeReply) GetMessageName() string          { return "one_map_request_mode_reply" }
func (*OneMapRequestModeReply) GetCrcString() string            { return "e8d4e804" }
func (*OneMapRequestModeReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneMapResolverDetails represents VPP binary API message 'one_map_resolver_details'.
type OneMapResolverDetails struct {
	IPAddress Address
}

func (m *OneMapResolverDetails) Reset()                        { *m = OneMapResolverDetails{} }
func (*OneMapResolverDetails) GetMessageName() string          { return "one_map_resolver_details" }
func (*OneMapResolverDetails) GetCrcString() string            { return "82a09deb" }
func (*OneMapResolverDetails) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneMapResolverDump represents VPP binary API message 'one_map_resolver_dump'.
type OneMapResolverDump struct{}

func (m *OneMapResolverDump) Reset()                        { *m = OneMapResolverDump{} }
func (*OneMapResolverDump) GetMessageName() string          { return "one_map_resolver_dump" }
func (*OneMapResolverDump) GetCrcString() string            { return "51077d14" }
func (*OneMapResolverDump) GetMessageType() api.MessageType { return api.RequestMessage }

// OneMapServerDetails represents VPP binary API message 'one_map_server_details'.
type OneMapServerDetails struct {
	IPAddress Address
}

func (m *OneMapServerDetails) Reset()                        { *m = OneMapServerDetails{} }
func (*OneMapServerDetails) GetMessageName() string          { return "one_map_server_details" }
func (*OneMapServerDetails) GetCrcString() string            { return "82a09deb" }
func (*OneMapServerDetails) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneMapServerDump represents VPP binary API message 'one_map_server_dump'.
type OneMapServerDump struct{}

func (m *OneMapServerDump) Reset()                        { *m = OneMapServerDump{} }
func (*OneMapServerDump) GetMessageName() string          { return "one_map_server_dump" }
func (*OneMapServerDump) GetCrcString() string            { return "51077d14" }
func (*OneMapServerDump) GetMessageType() api.MessageType { return api.RequestMessage }

// OneNdpBdGet represents VPP binary API message 'one_ndp_bd_get'.
type OneNdpBdGet struct{}

func (m *OneNdpBdGet) Reset()                        { *m = OneNdpBdGet{} }
func (*OneNdpBdGet) GetMessageName() string          { return "one_ndp_bd_get" }
func (*OneNdpBdGet) GetCrcString() string            { return "51077d14" }
func (*OneNdpBdGet) GetMessageType() api.MessageType { return api.RequestMessage }

// OneNdpBdGetReply represents VPP binary API message 'one_ndp_bd_get_reply'.
type OneNdpBdGetReply struct {
	Retval        int32
	Count         uint32 `struc:"sizeof=BridgeDomains"`
	BridgeDomains []uint32
}

func (m *OneNdpBdGetReply) Reset()                        { *m = OneNdpBdGetReply{} }
func (*OneNdpBdGetReply) GetMessageName() string          { return "one_ndp_bd_get_reply" }
func (*OneNdpBdGetReply) GetCrcString() string            { return "221ac888" }
func (*OneNdpBdGetReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneNdpEntriesGet represents VPP binary API message 'one_ndp_entries_get'.
type OneNdpEntriesGet struct {
	Bd uint32
}

func (m *OneNdpEntriesGet) Reset()                        { *m = OneNdpEntriesGet{} }
func (*OneNdpEntriesGet) GetMessageName() string          { return "one_ndp_entries_get" }
func (*OneNdpEntriesGet) GetCrcString() string            { return "4d418cf4" }
func (*OneNdpEntriesGet) GetMessageType() api.MessageType { return api.RequestMessage }

// OneNdpEntriesGetReply represents VPP binary API message 'one_ndp_entries_get_reply'.
type OneNdpEntriesGetReply struct {
	Retval  int32
	Count   uint32 `struc:"sizeof=Entries"`
	Entries []OneNdpEntry
}

func (m *OneNdpEntriesGetReply) Reset()                        { *m = OneNdpEntriesGetReply{} }
func (*OneNdpEntriesGetReply) GetMessageName() string          { return "one_ndp_entries_get_reply" }
func (*OneNdpEntriesGetReply) GetCrcString() string            { return "0bd34161" }
func (*OneNdpEntriesGetReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneNshSetLocatorSet represents VPP binary API message 'one_nsh_set_locator_set'.
type OneNshSetLocatorSet struct {
	IsAdd  bool
	LsName string `struc:"[64]byte"`
}

func (m *OneNshSetLocatorSet) Reset()                        { *m = OneNshSetLocatorSet{} }
func (*OneNshSetLocatorSet) GetMessageName() string          { return "one_nsh_set_locator_set" }
func (*OneNshSetLocatorSet) GetCrcString() string            { return "486e2b76" }
func (*OneNshSetLocatorSet) GetMessageType() api.MessageType { return api.RequestMessage }

// OneNshSetLocatorSetReply represents VPP binary API message 'one_nsh_set_locator_set_reply'.
type OneNshSetLocatorSetReply struct {
	Retval int32
}

func (m *OneNshSetLocatorSetReply) Reset()                        { *m = OneNshSetLocatorSetReply{} }
func (*OneNshSetLocatorSetReply) GetMessageName() string          { return "one_nsh_set_locator_set_reply" }
func (*OneNshSetLocatorSetReply) GetCrcString() string            { return "e8d4e804" }
func (*OneNshSetLocatorSetReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OnePitrSetLocatorSet represents VPP binary API message 'one_pitr_set_locator_set'.
type OnePitrSetLocatorSet struct {
	IsAdd  bool
	LsName string `struc:"[64]byte"`
}

func (m *OnePitrSetLocatorSet) Reset()                        { *m = OnePitrSetLocatorSet{} }
func (*OnePitrSetLocatorSet) GetMessageName() string          { return "one_pitr_set_locator_set" }
func (*OnePitrSetLocatorSet) GetCrcString() string            { return "486e2b76" }
func (*OnePitrSetLocatorSet) GetMessageType() api.MessageType { return api.RequestMessage }

// OnePitrSetLocatorSetReply represents VPP binary API message 'one_pitr_set_locator_set_reply'.
type OnePitrSetLocatorSetReply struct {
	Retval int32
}

func (m *OnePitrSetLocatorSetReply) Reset()                        { *m = OnePitrSetLocatorSetReply{} }
func (*OnePitrSetLocatorSetReply) GetMessageName() string          { return "one_pitr_set_locator_set_reply" }
func (*OnePitrSetLocatorSetReply) GetCrcString() string            { return "e8d4e804" }
func (*OnePitrSetLocatorSetReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneRlocProbeEnableDisable represents VPP binary API message 'one_rloc_probe_enable_disable'.
type OneRlocProbeEnableDisable struct {
	IsEnable bool
}

func (m *OneRlocProbeEnableDisable) Reset()                        { *m = OneRlocProbeEnableDisable{} }
func (*OneRlocProbeEnableDisable) GetMessageName() string          { return "one_rloc_probe_enable_disable" }
func (*OneRlocProbeEnableDisable) GetCrcString() string            { return "c264d7bf" }
func (*OneRlocProbeEnableDisable) GetMessageType() api.MessageType { return api.RequestMessage }

// OneRlocProbeEnableDisableReply represents VPP binary API message 'one_rloc_probe_enable_disable_reply'.
type OneRlocProbeEnableDisableReply struct {
	Retval int32
}

func (m *OneRlocProbeEnableDisableReply) Reset() { *m = OneRlocProbeEnableDisableReply{} }
func (*OneRlocProbeEnableDisableReply) GetMessageName() string {
	return "one_rloc_probe_enable_disable_reply"
}
func (*OneRlocProbeEnableDisableReply) GetCrcString() string            { return "e8d4e804" }
func (*OneRlocProbeEnableDisableReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneSetTransportProtocol represents VPP binary API message 'one_set_transport_protocol'.
type OneSetTransportProtocol struct {
	Protocol uint8
}

func (m *OneSetTransportProtocol) Reset()                        { *m = OneSetTransportProtocol{} }
func (*OneSetTransportProtocol) GetMessageName() string          { return "one_set_transport_protocol" }
func (*OneSetTransportProtocol) GetCrcString() string            { return "07b6b85f" }
func (*OneSetTransportProtocol) GetMessageType() api.MessageType { return api.RequestMessage }

// OneSetTransportProtocolReply represents VPP binary API message 'one_set_transport_protocol_reply'.
type OneSetTransportProtocolReply struct {
	Retval int32
}

func (m *OneSetTransportProtocolReply) Reset() { *m = OneSetTransportProtocolReply{} }
func (*OneSetTransportProtocolReply) GetMessageName() string {
	return "one_set_transport_protocol_reply"
}
func (*OneSetTransportProtocolReply) GetCrcString() string            { return "e8d4e804" }
func (*OneSetTransportProtocolReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneShowPetrMode represents VPP binary API message 'one_show_petr_mode'.
type OneShowPetrMode struct{}

func (m *OneShowPetrMode) Reset()                        { *m = OneShowPetrMode{} }
func (*OneShowPetrMode) GetMessageName() string          { return "one_show_petr_mode" }
func (*OneShowPetrMode) GetCrcString() string            { return "51077d14" }
func (*OneShowPetrMode) GetMessageType() api.MessageType { return api.RequestMessage }

// OneShowPetrModeReply represents VPP binary API message 'one_show_petr_mode_reply'.
type OneShowPetrModeReply struct {
	Retval   int32
	IsEnable bool
}

func (m *OneShowPetrModeReply) Reset()                        { *m = OneShowPetrModeReply{} }
func (*OneShowPetrModeReply) GetMessageName() string          { return "one_show_petr_mode_reply" }
func (*OneShowPetrModeReply) GetCrcString() string            { return "f15abb16" }
func (*OneShowPetrModeReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneShowPitrMode represents VPP binary API message 'one_show_pitr_mode'.
type OneShowPitrMode struct{}

func (m *OneShowPitrMode) Reset()                        { *m = OneShowPitrMode{} }
func (*OneShowPitrMode) GetMessageName() string          { return "one_show_pitr_mode" }
func (*OneShowPitrMode) GetCrcString() string            { return "51077d14" }
func (*OneShowPitrMode) GetMessageType() api.MessageType { return api.RequestMessage }

// OneShowPitrModeReply represents VPP binary API message 'one_show_pitr_mode_reply'.
type OneShowPitrModeReply struct {
	Retval   int32
	IsEnable bool
}

func (m *OneShowPitrModeReply) Reset()                        { *m = OneShowPitrModeReply{} }
func (*OneShowPitrModeReply) GetMessageName() string          { return "one_show_pitr_mode_reply" }
func (*OneShowPitrModeReply) GetCrcString() string            { return "f15abb16" }
func (*OneShowPitrModeReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneShowXtrMode represents VPP binary API message 'one_show_xtr_mode'.
type OneShowXtrMode struct{}

func (m *OneShowXtrMode) Reset()                        { *m = OneShowXtrMode{} }
func (*OneShowXtrMode) GetMessageName() string          { return "one_show_xtr_mode" }
func (*OneShowXtrMode) GetCrcString() string            { return "51077d14" }
func (*OneShowXtrMode) GetMessageType() api.MessageType { return api.RequestMessage }

// OneShowXtrModeReply represents VPP binary API message 'one_show_xtr_mode_reply'.
type OneShowXtrModeReply struct {
	Retval   int32
	IsEnable bool
}

func (m *OneShowXtrModeReply) Reset()                        { *m = OneShowXtrModeReply{} }
func (*OneShowXtrModeReply) GetMessageName() string          { return "one_show_xtr_mode_reply" }
func (*OneShowXtrModeReply) GetCrcString() string            { return "f15abb16" }
func (*OneShowXtrModeReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneStatsDetails represents VPP binary API message 'one_stats_details'.
type OneStatsDetails struct {
	Vni      uint32
	Deid     Eid
	Seid     Eid
	Rloc     Address
	Lloc     Address
	PktCount uint32
	Bytes    uint32
}

func (m *OneStatsDetails) Reset()                        { *m = OneStatsDetails{} }
func (*OneStatsDetails) GetMessageName() string          { return "one_stats_details" }
func (*OneStatsDetails) GetCrcString() string            { return "ff6ef238" }
func (*OneStatsDetails) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneStatsDump represents VPP binary API message 'one_stats_dump'.
type OneStatsDump struct{}

func (m *OneStatsDump) Reset()                        { *m = OneStatsDump{} }
func (*OneStatsDump) GetMessageName() string          { return "one_stats_dump" }
func (*OneStatsDump) GetCrcString() string            { return "51077d14" }
func (*OneStatsDump) GetMessageType() api.MessageType { return api.RequestMessage }

// OneStatsEnableDisable represents VPP binary API message 'one_stats_enable_disable'.
type OneStatsEnableDisable struct {
	IsEnable bool
}

func (m *OneStatsEnableDisable) Reset()                        { *m = OneStatsEnableDisable{} }
func (*OneStatsEnableDisable) GetMessageName() string          { return "one_stats_enable_disable" }
func (*OneStatsEnableDisable) GetCrcString() string            { return "c264d7bf" }
func (*OneStatsEnableDisable) GetMessageType() api.MessageType { return api.RequestMessage }

// OneStatsEnableDisableReply represents VPP binary API message 'one_stats_enable_disable_reply'.
type OneStatsEnableDisableReply struct {
	Retval int32
}

func (m *OneStatsEnableDisableReply) Reset()                        { *m = OneStatsEnableDisableReply{} }
func (*OneStatsEnableDisableReply) GetMessageName() string          { return "one_stats_enable_disable_reply" }
func (*OneStatsEnableDisableReply) GetCrcString() string            { return "e8d4e804" }
func (*OneStatsEnableDisableReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneStatsFlush represents VPP binary API message 'one_stats_flush'.
type OneStatsFlush struct{}

func (m *OneStatsFlush) Reset()                        { *m = OneStatsFlush{} }
func (*OneStatsFlush) GetMessageName() string          { return "one_stats_flush" }
func (*OneStatsFlush) GetCrcString() string            { return "51077d14" }
func (*OneStatsFlush) GetMessageType() api.MessageType { return api.RequestMessage }

// OneStatsFlushReply represents VPP binary API message 'one_stats_flush_reply'.
type OneStatsFlushReply struct {
	Retval int32
}

func (m *OneStatsFlushReply) Reset()                        { *m = OneStatsFlushReply{} }
func (*OneStatsFlushReply) GetMessageName() string          { return "one_stats_flush_reply" }
func (*OneStatsFlushReply) GetCrcString() string            { return "e8d4e804" }
func (*OneStatsFlushReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// OneUsePetr represents VPP binary API message 'one_use_petr'.
type OneUsePetr struct {
	IPAddress Address
	IsAdd     bool
}

func (m *OneUsePetr) Reset()                        { *m = OneUsePetr{} }
func (*OneUsePetr) GetMessageName() string          { return "one_use_petr" }
func (*OneUsePetr) GetCrcString() string            { return "9e141831" }
func (*OneUsePetr) GetMessageType() api.MessageType { return api.RequestMessage }

// OneUsePetrReply represents VPP binary API message 'one_use_petr_reply'.
type OneUsePetrReply struct {
	Retval int32
}

func (m *OneUsePetrReply) Reset()                        { *m = OneUsePetrReply{} }
func (*OneUsePetrReply) GetMessageName() string          { return "one_use_petr_reply" }
func (*OneUsePetrReply) GetCrcString() string            { return "e8d4e804" }
func (*OneUsePetrReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// ShowOneMapRegisterFallbackThreshold represents VPP binary API message 'show_one_map_register_fallback_threshold'.
type ShowOneMapRegisterFallbackThreshold struct{}

func (m *ShowOneMapRegisterFallbackThreshold) Reset() { *m = ShowOneMapRegisterFallbackThreshold{} }
func (*ShowOneMapRegisterFallbackThreshold) GetMessageName() string {
	return "show_one_map_register_fallback_threshold"
}
func (*ShowOneMapRegisterFallbackThreshold) GetCrcString() string { return "51077d14" }
func (*ShowOneMapRegisterFallbackThreshold) GetMessageType() api.MessageType {
	return api.RequestMessage
}

// ShowOneMapRegisterFallbackThresholdReply represents VPP binary API message 'show_one_map_register_fallback_threshold_reply'.
type ShowOneMapRegisterFallbackThresholdReply struct {
	Retval int32
	Value  uint32
}

func (m *ShowOneMapRegisterFallbackThresholdReply) Reset() {
	*m = ShowOneMapRegisterFallbackThresholdReply{}
}
func (*ShowOneMapRegisterFallbackThresholdReply) GetMessageName() string {
	return "show_one_map_register_fallback_threshold_reply"
}
func (*ShowOneMapRegisterFallbackThresholdReply) GetCrcString() string { return "c93a9113" }
func (*ShowOneMapRegisterFallbackThresholdReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

// ShowOneMapRegisterState represents VPP binary API message 'show_one_map_register_state'.
type ShowOneMapRegisterState struct{}

func (m *ShowOneMapRegisterState) Reset()                        { *m = ShowOneMapRegisterState{} }
func (*ShowOneMapRegisterState) GetMessageName() string          { return "show_one_map_register_state" }
func (*ShowOneMapRegisterState) GetCrcString() string            { return "51077d14" }
func (*ShowOneMapRegisterState) GetMessageType() api.MessageType { return api.RequestMessage }

// ShowOneMapRegisterStateReply represents VPP binary API message 'show_one_map_register_state_reply'.
type ShowOneMapRegisterStateReply struct {
	Retval   int32
	IsEnable bool
}

func (m *ShowOneMapRegisterStateReply) Reset() { *m = ShowOneMapRegisterStateReply{} }
func (*ShowOneMapRegisterStateReply) GetMessageName() string {
	return "show_one_map_register_state_reply"
}
func (*ShowOneMapRegisterStateReply) GetCrcString() string            { return "f15abb16" }
func (*ShowOneMapRegisterStateReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// ShowOneMapRegisterTTL represents VPP binary API message 'show_one_map_register_ttl'.
type ShowOneMapRegisterTTL struct{}

func (m *ShowOneMapRegisterTTL) Reset()                        { *m = ShowOneMapRegisterTTL{} }
func (*ShowOneMapRegisterTTL) GetMessageName() string          { return "show_one_map_register_ttl" }
func (*ShowOneMapRegisterTTL) GetCrcString() string            { return "51077d14" }
func (*ShowOneMapRegisterTTL) GetMessageType() api.MessageType { return api.RequestMessage }

// ShowOneMapRegisterTTLReply represents VPP binary API message 'show_one_map_register_ttl_reply'.
type ShowOneMapRegisterTTLReply struct {
	Retval int32
	TTL    uint32
}

func (m *ShowOneMapRegisterTTLReply) Reset()                        { *m = ShowOneMapRegisterTTLReply{} }
func (*ShowOneMapRegisterTTLReply) GetMessageName() string          { return "show_one_map_register_ttl_reply" }
func (*ShowOneMapRegisterTTLReply) GetCrcString() string            { return "fa83dd66" }
func (*ShowOneMapRegisterTTLReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// ShowOneMapRequestMode represents VPP binary API message 'show_one_map_request_mode'.
type ShowOneMapRequestMode struct{}

func (m *ShowOneMapRequestMode) Reset()                        { *m = ShowOneMapRequestMode{} }
func (*ShowOneMapRequestMode) GetMessageName() string          { return "show_one_map_request_mode" }
func (*ShowOneMapRequestMode) GetCrcString() string            { return "51077d14" }
func (*ShowOneMapRequestMode) GetMessageType() api.MessageType { return api.RequestMessage }

// ShowOneMapRequestModeReply represents VPP binary API message 'show_one_map_request_mode_reply'.
type ShowOneMapRequestModeReply struct {
	Retval int32
	Mode   OneMapMode
}

func (m *ShowOneMapRequestModeReply) Reset()                        { *m = ShowOneMapRequestModeReply{} }
func (*ShowOneMapRequestModeReply) GetMessageName() string          { return "show_one_map_request_mode_reply" }
func (*ShowOneMapRequestModeReply) GetCrcString() string            { return "d41f3c1d" }
func (*ShowOneMapRequestModeReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// ShowOneNshMapping represents VPP binary API message 'show_one_nsh_mapping'.
type ShowOneNshMapping struct{}

func (m *ShowOneNshMapping) Reset()                        { *m = ShowOneNshMapping{} }
func (*ShowOneNshMapping) GetMessageName() string          { return "show_one_nsh_mapping" }
func (*ShowOneNshMapping) GetCrcString() string            { return "51077d14" }
func (*ShowOneNshMapping) GetMessageType() api.MessageType { return api.RequestMessage }

// ShowOneNshMappingReply represents VPP binary API message 'show_one_nsh_mapping_reply'.
type ShowOneNshMappingReply struct {
	Retval         int32
	IsSet          bool
	LocatorSetName string `struc:"[64]byte"`
}

func (m *ShowOneNshMappingReply) Reset()                        { *m = ShowOneNshMappingReply{} }
func (*ShowOneNshMappingReply) GetMessageName() string          { return "show_one_nsh_mapping_reply" }
func (*ShowOneNshMappingReply) GetCrcString() string            { return "46478c02" }
func (*ShowOneNshMappingReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// ShowOnePitr represents VPP binary API message 'show_one_pitr'.
type ShowOnePitr struct{}

func (m *ShowOnePitr) Reset()                        { *m = ShowOnePitr{} }
func (*ShowOnePitr) GetMessageName() string          { return "show_one_pitr" }
func (*ShowOnePitr) GetCrcString() string            { return "51077d14" }
func (*ShowOnePitr) GetMessageType() api.MessageType { return api.RequestMessage }

// ShowOnePitrReply represents VPP binary API message 'show_one_pitr_reply'.
type ShowOnePitrReply struct {
	Retval         int32
	Status         bool
	LocatorSetName string `struc:"[64]byte"`
}

func (m *ShowOnePitrReply) Reset()                        { *m = ShowOnePitrReply{} }
func (*ShowOnePitrReply) GetMessageName() string          { return "show_one_pitr_reply" }
func (*ShowOnePitrReply) GetCrcString() string            { return "a2d1a49f" }
func (*ShowOnePitrReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// ShowOneRlocProbeState represents VPP binary API message 'show_one_rloc_probe_state'.
type ShowOneRlocProbeState struct{}

func (m *ShowOneRlocProbeState) Reset()                        { *m = ShowOneRlocProbeState{} }
func (*ShowOneRlocProbeState) GetMessageName() string          { return "show_one_rloc_probe_state" }
func (*ShowOneRlocProbeState) GetCrcString() string            { return "51077d14" }
func (*ShowOneRlocProbeState) GetMessageType() api.MessageType { return api.RequestMessage }

// ShowOneRlocProbeStateReply represents VPP binary API message 'show_one_rloc_probe_state_reply'.
type ShowOneRlocProbeStateReply struct {
	Retval   int32
	IsEnable bool
}

func (m *ShowOneRlocProbeStateReply) Reset()                        { *m = ShowOneRlocProbeStateReply{} }
func (*ShowOneRlocProbeStateReply) GetMessageName() string          { return "show_one_rloc_probe_state_reply" }
func (*ShowOneRlocProbeStateReply) GetCrcString() string            { return "f15abb16" }
func (*ShowOneRlocProbeStateReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// ShowOneStatsEnableDisable represents VPP binary API message 'show_one_stats_enable_disable'.
type ShowOneStatsEnableDisable struct{}

func (m *ShowOneStatsEnableDisable) Reset()                        { *m = ShowOneStatsEnableDisable{} }
func (*ShowOneStatsEnableDisable) GetMessageName() string          { return "show_one_stats_enable_disable" }
func (*ShowOneStatsEnableDisable) GetCrcString() string            { return "51077d14" }
func (*ShowOneStatsEnableDisable) GetMessageType() api.MessageType { return api.RequestMessage }

// ShowOneStatsEnableDisableReply represents VPP binary API message 'show_one_stats_enable_disable_reply'.
type ShowOneStatsEnableDisableReply struct {
	Retval   int32
	IsEnable bool
}

func (m *ShowOneStatsEnableDisableReply) Reset() { *m = ShowOneStatsEnableDisableReply{} }
func (*ShowOneStatsEnableDisableReply) GetMessageName() string {
	return "show_one_stats_enable_disable_reply"
}
func (*ShowOneStatsEnableDisableReply) GetCrcString() string            { return "f15abb16" }
func (*ShowOneStatsEnableDisableReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// ShowOneStatus represents VPP binary API message 'show_one_status'.
type ShowOneStatus struct{}

func (m *ShowOneStatus) Reset()                        { *m = ShowOneStatus{} }
func (*ShowOneStatus) GetMessageName() string          { return "show_one_status" }
func (*ShowOneStatus) GetCrcString() string            { return "51077d14" }
func (*ShowOneStatus) GetMessageType() api.MessageType { return api.RequestMessage }

// ShowOneStatusReply represents VPP binary API message 'show_one_status_reply'.
type ShowOneStatusReply struct {
	Retval        int32
	FeatureStatus bool
	GpeStatus     bool
}

func (m *ShowOneStatusReply) Reset()                        { *m = ShowOneStatusReply{} }
func (*ShowOneStatusReply) GetMessageName() string          { return "show_one_status_reply" }
func (*ShowOneStatusReply) GetCrcString() string            { return "961bb25b" }
func (*ShowOneStatusReply) GetMessageType() api.MessageType { return api.ReplyMessage }

// ShowOneUsePetr represents VPP binary API message 'show_one_use_petr'.
type ShowOneUsePetr struct{}

func (m *ShowOneUsePetr) Reset()                        { *m = ShowOneUsePetr{} }
func (*ShowOneUsePetr) GetMessageName() string          { return "show_one_use_petr" }
func (*ShowOneUsePetr) GetCrcString() string            { return "51077d14" }
func (*ShowOneUsePetr) GetMessageType() api.MessageType { return api.RequestMessage }

// ShowOneUsePetrReply represents VPP binary API message 'show_one_use_petr_reply'.
type ShowOneUsePetrReply struct {
	Retval    int32
	Status    bool
	IPAddress Address
}

func (m *ShowOneUsePetrReply) Reset()                        { *m = ShowOneUsePetrReply{} }
func (*ShowOneUsePetrReply) GetMessageName() string          { return "show_one_use_petr_reply" }
func (*ShowOneUsePetrReply) GetCrcString() string            { return "10e744a6" }
func (*ShowOneUsePetrReply) GetMessageType() api.MessageType { return api.ReplyMessage }

func init() {
	api.RegisterMessage((*OneAddDelAdjacency)(nil), "one.OneAddDelAdjacency")
	api.RegisterMessage((*OneAddDelAdjacencyReply)(nil), "one.OneAddDelAdjacencyReply")
	api.RegisterMessage((*OneAddDelL2ArpEntry)(nil), "one.OneAddDelL2ArpEntry")
	api.RegisterMessage((*OneAddDelL2ArpEntryReply)(nil), "one.OneAddDelL2ArpEntryReply")
	api.RegisterMessage((*OneAddDelLocalEid)(nil), "one.OneAddDelLocalEid")
	api.RegisterMessage((*OneAddDelLocalEidReply)(nil), "one.OneAddDelLocalEidReply")
	api.RegisterMessage((*OneAddDelLocator)(nil), "one.OneAddDelLocator")
	api.RegisterMessage((*OneAddDelLocatorReply)(nil), "one.OneAddDelLocatorReply")
	api.RegisterMessage((*OneAddDelLocatorSet)(nil), "one.OneAddDelLocatorSet")
	api.RegisterMessage((*OneAddDelLocatorSetReply)(nil), "one.OneAddDelLocatorSetReply")
	api.RegisterMessage((*OneAddDelMapRequestItrRlocs)(nil), "one.OneAddDelMapRequestItrRlocs")
	api.RegisterMessage((*OneAddDelMapRequestItrRlocsReply)(nil), "one.OneAddDelMapRequestItrRlocsReply")
	api.RegisterMessage((*OneAddDelMapResolver)(nil), "one.OneAddDelMapResolver")
	api.RegisterMessage((*OneAddDelMapResolverReply)(nil), "one.OneAddDelMapResolverReply")
	api.RegisterMessage((*OneAddDelMapServer)(nil), "one.OneAddDelMapServer")
	api.RegisterMessage((*OneAddDelMapServerReply)(nil), "one.OneAddDelMapServerReply")
	api.RegisterMessage((*OneAddDelNdpEntry)(nil), "one.OneAddDelNdpEntry")
	api.RegisterMessage((*OneAddDelNdpEntryReply)(nil), "one.OneAddDelNdpEntryReply")
	api.RegisterMessage((*OneAddDelRemoteMapping)(nil), "one.OneAddDelRemoteMapping")
	api.RegisterMessage((*OneAddDelRemoteMappingReply)(nil), "one.OneAddDelRemoteMappingReply")
	api.RegisterMessage((*OneAdjacenciesGet)(nil), "one.OneAdjacenciesGet")
	api.RegisterMessage((*OneAdjacenciesGetReply)(nil), "one.OneAdjacenciesGetReply")
	api.RegisterMessage((*OneEidTableAddDelMap)(nil), "one.OneEidTableAddDelMap")
	api.RegisterMessage((*OneEidTableAddDelMapReply)(nil), "one.OneEidTableAddDelMapReply")
	api.RegisterMessage((*OneEidTableDetails)(nil), "one.OneEidTableDetails")
	api.RegisterMessage((*OneEidTableDump)(nil), "one.OneEidTableDump")
	api.RegisterMessage((*OneEidTableMapDetails)(nil), "one.OneEidTableMapDetails")
	api.RegisterMessage((*OneEidTableMapDump)(nil), "one.OneEidTableMapDump")
	api.RegisterMessage((*OneEidTableVniDetails)(nil), "one.OneEidTableVniDetails")
	api.RegisterMessage((*OneEidTableVniDump)(nil), "one.OneEidTableVniDump")
	api.RegisterMessage((*OneEnableDisable)(nil), "one.OneEnableDisable")
	api.RegisterMessage((*OneEnableDisablePetrMode)(nil), "one.OneEnableDisablePetrMode")
	api.RegisterMessage((*OneEnableDisablePetrModeReply)(nil), "one.OneEnableDisablePetrModeReply")
	api.RegisterMessage((*OneEnableDisablePitrMode)(nil), "one.OneEnableDisablePitrMode")
	api.RegisterMessage((*OneEnableDisablePitrModeReply)(nil), "one.OneEnableDisablePitrModeReply")
	api.RegisterMessage((*OneEnableDisableReply)(nil), "one.OneEnableDisableReply")
	api.RegisterMessage((*OneEnableDisableXtrMode)(nil), "one.OneEnableDisableXtrMode")
	api.RegisterMessage((*OneEnableDisableXtrModeReply)(nil), "one.OneEnableDisableXtrModeReply")
	api.RegisterMessage((*OneGetMapRequestItrRlocs)(nil), "one.OneGetMapRequestItrRlocs")
	api.RegisterMessage((*OneGetMapRequestItrRlocsReply)(nil), "one.OneGetMapRequestItrRlocsReply")
	api.RegisterMessage((*OneGetTransportProtocol)(nil), "one.OneGetTransportProtocol")
	api.RegisterMessage((*OneGetTransportProtocolReply)(nil), "one.OneGetTransportProtocolReply")
	api.RegisterMessage((*OneL2ArpBdGet)(nil), "one.OneL2ArpBdGet")
	api.RegisterMessage((*OneL2ArpBdGetReply)(nil), "one.OneL2ArpBdGetReply")
	api.RegisterMessage((*OneL2ArpEntriesGet)(nil), "one.OneL2ArpEntriesGet")
	api.RegisterMessage((*OneL2ArpEntriesGetReply)(nil), "one.OneL2ArpEntriesGetReply")
	api.RegisterMessage((*OneLocatorDetails)(nil), "one.OneLocatorDetails")
	api.RegisterMessage((*OneLocatorDump)(nil), "one.OneLocatorDump")
	api.RegisterMessage((*OneLocatorSetDetails)(nil), "one.OneLocatorSetDetails")
	api.RegisterMessage((*OneLocatorSetDump)(nil), "one.OneLocatorSetDump")
	api.RegisterMessage((*OneMapRegisterEnableDisable)(nil), "one.OneMapRegisterEnableDisable")
	api.RegisterMessage((*OneMapRegisterEnableDisableReply)(nil), "one.OneMapRegisterEnableDisableReply")
	api.RegisterMessage((*OneMapRegisterFallbackThreshold)(nil), "one.OneMapRegisterFallbackThreshold")
	api.RegisterMessage((*OneMapRegisterFallbackThresholdReply)(nil), "one.OneMapRegisterFallbackThresholdReply")
	api.RegisterMessage((*OneMapRegisterSetTTL)(nil), "one.OneMapRegisterSetTTL")
	api.RegisterMessage((*OneMapRegisterSetTTLReply)(nil), "one.OneMapRegisterSetTTLReply")
	api.RegisterMessage((*OneMapRequestMode)(nil), "one.OneMapRequestMode")
	api.RegisterMessage((*OneMapRequestModeReply)(nil), "one.OneMapRequestModeReply")
	api.RegisterMessage((*OneMapResolverDetails)(nil), "one.OneMapResolverDetails")
	api.RegisterMessage((*OneMapResolverDump)(nil), "one.OneMapResolverDump")
	api.RegisterMessage((*OneMapServerDetails)(nil), "one.OneMapServerDetails")
	api.RegisterMessage((*OneMapServerDump)(nil), "one.OneMapServerDump")
	api.RegisterMessage((*OneNdpBdGet)(nil), "one.OneNdpBdGet")
	api.RegisterMessage((*OneNdpBdGetReply)(nil), "one.OneNdpBdGetReply")
	api.RegisterMessage((*OneNdpEntriesGet)(nil), "one.OneNdpEntriesGet")
	api.RegisterMessage((*OneNdpEntriesGetReply)(nil), "one.OneNdpEntriesGetReply")
	api.RegisterMessage((*OneNshSetLocatorSet)(nil), "one.OneNshSetLocatorSet")
	api.RegisterMessage((*OneNshSetLocatorSetReply)(nil), "one.OneNshSetLocatorSetReply")
	api.RegisterMessage((*OnePitrSetLocatorSet)(nil), "one.OnePitrSetLocatorSet")
	api.RegisterMessage((*OnePitrSetLocatorSetReply)(nil), "one.OnePitrSetLocatorSetReply")
	api.RegisterMessage((*OneRlocProbeEnableDisable)(nil), "one.OneRlocProbeEnableDisable")
	api.RegisterMessage((*OneRlocProbeEnableDisableReply)(nil), "one.OneRlocProbeEnableDisableReply")
	api.RegisterMessage((*OneSetTransportProtocol)(nil), "one.OneSetTransportProtocol")
	api.RegisterMessage((*OneSetTransportProtocolReply)(nil), "one.OneSetTransportProtocolReply")
	api.RegisterMessage((*OneShowPetrMode)(nil), "one.OneShowPetrMode")
	api.RegisterMessage((*OneShowPetrModeReply)(nil), "one.OneShowPetrModeReply")
	api.RegisterMessage((*OneShowPitrMode)(nil), "one.OneShowPitrMode")
	api.RegisterMessage((*OneShowPitrModeReply)(nil), "one.OneShowPitrModeReply")
	api.RegisterMessage((*OneShowXtrMode)(nil), "one.OneShowXtrMode")
	api.RegisterMessage((*OneShowXtrModeReply)(nil), "one.OneShowXtrModeReply")
	api.RegisterMessage((*OneStatsDetails)(nil), "one.OneStatsDetails")
	api.RegisterMessage((*OneStatsDump)(nil), "one.OneStatsDump")
	api.RegisterMessage((*OneStatsEnableDisable)(nil), "one.OneStatsEnableDisable")
	api.RegisterMessage((*OneStatsEnableDisableReply)(nil), "one.OneStatsEnableDisableReply")
	api.RegisterMessage((*OneStatsFlush)(nil), "one.OneStatsFlush")
	api.RegisterMessage((*OneStatsFlushReply)(nil), "one.OneStatsFlushReply")
	api.RegisterMessage((*OneUsePetr)(nil), "one.OneUsePetr")
	api.RegisterMessage((*OneUsePetrReply)(nil), "one.OneUsePetrReply")
	api.RegisterMessage((*ShowOneMapRegisterFallbackThreshold)(nil), "one.ShowOneMapRegisterFallbackThreshold")
	api.RegisterMessage((*ShowOneMapRegisterFallbackThresholdReply)(nil), "one.ShowOneMapRegisterFallbackThresholdReply")
	api.RegisterMessage((*ShowOneMapRegisterState)(nil), "one.ShowOneMapRegisterState")
	api.RegisterMessage((*ShowOneMapRegisterStateReply)(nil), "one.ShowOneMapRegisterStateReply")
	api.RegisterMessage((*ShowOneMapRegisterTTL)(nil), "one.ShowOneMapRegisterTTL")
	api.RegisterMessage((*ShowOneMapRegisterTTLReply)(nil), "one.ShowOneMapRegisterTTLReply")
	api.RegisterMessage((*ShowOneMapRequestMode)(nil), "one.ShowOneMapRequestMode")
	api.RegisterMessage((*ShowOneMapRequestModeReply)(nil), "one.ShowOneMapRequestModeReply")
	api.RegisterMessage((*ShowOneNshMapping)(nil), "one.ShowOneNshMapping")
	api.RegisterMessage((*ShowOneNshMappingReply)(nil), "one.ShowOneNshMappingReply")
	api.RegisterMessage((*ShowOnePitr)(nil), "one.ShowOnePitr")
	api.RegisterMessage((*ShowOnePitrReply)(nil), "one.ShowOnePitrReply")
	api.RegisterMessage((*ShowOneRlocProbeState)(nil), "one.ShowOneRlocProbeState")
	api.RegisterMessage((*ShowOneRlocProbeStateReply)(nil), "one.ShowOneRlocProbeStateReply")
	api.RegisterMessage((*ShowOneStatsEnableDisable)(nil), "one.ShowOneStatsEnableDisable")
	api.RegisterMessage((*ShowOneStatsEnableDisableReply)(nil), "one.ShowOneStatsEnableDisableReply")
	api.RegisterMessage((*ShowOneStatus)(nil), "one.ShowOneStatus")
	api.RegisterMessage((*ShowOneStatusReply)(nil), "one.ShowOneStatusReply")
	api.RegisterMessage((*ShowOneUsePetr)(nil), "one.ShowOneUsePetr")
	api.RegisterMessage((*ShowOneUsePetrReply)(nil), "one.ShowOneUsePetrReply")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*OneAddDelAdjacency)(nil),
		(*OneAddDelAdjacencyReply)(nil),
		(*OneAddDelL2ArpEntry)(nil),
		(*OneAddDelL2ArpEntryReply)(nil),
		(*OneAddDelLocalEid)(nil),
		(*OneAddDelLocalEidReply)(nil),
		(*OneAddDelLocator)(nil),
		(*OneAddDelLocatorReply)(nil),
		(*OneAddDelLocatorSet)(nil),
		(*OneAddDelLocatorSetReply)(nil),
		(*OneAddDelMapRequestItrRlocs)(nil),
		(*OneAddDelMapRequestItrRlocsReply)(nil),
		(*OneAddDelMapResolver)(nil),
		(*OneAddDelMapResolverReply)(nil),
		(*OneAddDelMapServer)(nil),
		(*OneAddDelMapServerReply)(nil),
		(*OneAddDelNdpEntry)(nil),
		(*OneAddDelNdpEntryReply)(nil),
		(*OneAddDelRemoteMapping)(nil),
		(*OneAddDelRemoteMappingReply)(nil),
		(*OneAdjacenciesGet)(nil),
		(*OneAdjacenciesGetReply)(nil),
		(*OneEidTableAddDelMap)(nil),
		(*OneEidTableAddDelMapReply)(nil),
		(*OneEidTableDetails)(nil),
		(*OneEidTableDump)(nil),
		(*OneEidTableMapDetails)(nil),
		(*OneEidTableMapDump)(nil),
		(*OneEidTableVniDetails)(nil),
		(*OneEidTableVniDump)(nil),
		(*OneEnableDisable)(nil),
		(*OneEnableDisablePetrMode)(nil),
		(*OneEnableDisablePetrModeReply)(nil),
		(*OneEnableDisablePitrMode)(nil),
		(*OneEnableDisablePitrModeReply)(nil),
		(*OneEnableDisableReply)(nil),
		(*OneEnableDisableXtrMode)(nil),
		(*OneEnableDisableXtrModeReply)(nil),
		(*OneGetMapRequestItrRlocs)(nil),
		(*OneGetMapRequestItrRlocsReply)(nil),
		(*OneGetTransportProtocol)(nil),
		(*OneGetTransportProtocolReply)(nil),
		(*OneL2ArpBdGet)(nil),
		(*OneL2ArpBdGetReply)(nil),
		(*OneL2ArpEntriesGet)(nil),
		(*OneL2ArpEntriesGetReply)(nil),
		(*OneLocatorDetails)(nil),
		(*OneLocatorDump)(nil),
		(*OneLocatorSetDetails)(nil),
		(*OneLocatorSetDump)(nil),
		(*OneMapRegisterEnableDisable)(nil),
		(*OneMapRegisterEnableDisableReply)(nil),
		(*OneMapRegisterFallbackThreshold)(nil),
		(*OneMapRegisterFallbackThresholdReply)(nil),
		(*OneMapRegisterSetTTL)(nil),
		(*OneMapRegisterSetTTLReply)(nil),
		(*OneMapRequestMode)(nil),
		(*OneMapRequestModeReply)(nil),
		(*OneMapResolverDetails)(nil),
		(*OneMapResolverDump)(nil),
		(*OneMapServerDetails)(nil),
		(*OneMapServerDump)(nil),
		(*OneNdpBdGet)(nil),
		(*OneNdpBdGetReply)(nil),
		(*OneNdpEntriesGet)(nil),
		(*OneNdpEntriesGetReply)(nil),
		(*OneNshSetLocatorSet)(nil),
		(*OneNshSetLocatorSetReply)(nil),
		(*OnePitrSetLocatorSet)(nil),
		(*OnePitrSetLocatorSetReply)(nil),
		(*OneRlocProbeEnableDisable)(nil),
		(*OneRlocProbeEnableDisableReply)(nil),
		(*OneSetTransportProtocol)(nil),
		(*OneSetTransportProtocolReply)(nil),
		(*OneShowPetrMode)(nil),
		(*OneShowPetrModeReply)(nil),
		(*OneShowPitrMode)(nil),
		(*OneShowPitrModeReply)(nil),
		(*OneShowXtrMode)(nil),
		(*OneShowXtrModeReply)(nil),
		(*OneStatsDetails)(nil),
		(*OneStatsDump)(nil),
		(*OneStatsEnableDisable)(nil),
		(*OneStatsEnableDisableReply)(nil),
		(*OneStatsFlush)(nil),
		(*OneStatsFlushReply)(nil),
		(*OneUsePetr)(nil),
		(*OneUsePetrReply)(nil),
		(*ShowOneMapRegisterFallbackThreshold)(nil),
		(*ShowOneMapRegisterFallbackThresholdReply)(nil),
		(*ShowOneMapRegisterState)(nil),
		(*ShowOneMapRegisterStateReply)(nil),
		(*ShowOneMapRegisterTTL)(nil),
		(*ShowOneMapRegisterTTLReply)(nil),
		(*ShowOneMapRequestMode)(nil),
		(*ShowOneMapRequestModeReply)(nil),
		(*ShowOneNshMapping)(nil),
		(*ShowOneNshMappingReply)(nil),
		(*ShowOnePitr)(nil),
		(*ShowOnePitrReply)(nil),
		(*ShowOneRlocProbeState)(nil),
		(*ShowOneRlocProbeStateReply)(nil),
		(*ShowOneStatsEnableDisable)(nil),
		(*ShowOneStatsEnableDisableReply)(nil),
		(*ShowOneStatus)(nil),
		(*ShowOneStatusReply)(nil),
		(*ShowOneUsePetr)(nil),
		(*ShowOneUsePetrReply)(nil),
	}
}

// RPCService represents RPC service API for one module.
type RPCService interface {
	DumpOneEidTable(ctx context.Context, in *OneEidTableDump) (RPCService_DumpOneEidTableClient, error)
	DumpOneEidTableMap(ctx context.Context, in *OneEidTableMapDump) (RPCService_DumpOneEidTableMapClient, error)
	DumpOneEidTableVni(ctx context.Context, in *OneEidTableVniDump) (RPCService_DumpOneEidTableVniClient, error)
	DumpOneLocator(ctx context.Context, in *OneLocatorDump) (RPCService_DumpOneLocatorClient, error)
	DumpOneLocatorSet(ctx context.Context, in *OneLocatorSetDump) (RPCService_DumpOneLocatorSetClient, error)
	DumpOneMapResolver(ctx context.Context, in *OneMapResolverDump) (RPCService_DumpOneMapResolverClient, error)
	DumpOneMapServer(ctx context.Context, in *OneMapServerDump) (RPCService_DumpOneMapServerClient, error)
	DumpOneStats(ctx context.Context, in *OneStatsDump) (RPCService_DumpOneStatsClient, error)
	OneAddDelAdjacency(ctx context.Context, in *OneAddDelAdjacency) (*OneAddDelAdjacencyReply, error)
	OneAddDelL2ArpEntry(ctx context.Context, in *OneAddDelL2ArpEntry) (*OneAddDelL2ArpEntryReply, error)
	OneAddDelLocalEid(ctx context.Context, in *OneAddDelLocalEid) (*OneAddDelLocalEidReply, error)
	OneAddDelLocator(ctx context.Context, in *OneAddDelLocator) (*OneAddDelLocatorReply, error)
	OneAddDelLocatorSet(ctx context.Context, in *OneAddDelLocatorSet) (*OneAddDelLocatorSetReply, error)
	OneAddDelMapRequestItrRlocs(ctx context.Context, in *OneAddDelMapRequestItrRlocs) (*OneAddDelMapRequestItrRlocsReply, error)
	OneAddDelMapResolver(ctx context.Context, in *OneAddDelMapResolver) (*OneAddDelMapResolverReply, error)
	OneAddDelMapServer(ctx context.Context, in *OneAddDelMapServer) (*OneAddDelMapServerReply, error)
	OneAddDelNdpEntry(ctx context.Context, in *OneAddDelNdpEntry) (*OneAddDelNdpEntryReply, error)
	OneAddDelRemoteMapping(ctx context.Context, in *OneAddDelRemoteMapping) (*OneAddDelRemoteMappingReply, error)
	OneAdjacenciesGet(ctx context.Context, in *OneAdjacenciesGet) (*OneAdjacenciesGetReply, error)
	OneEidTableAddDelMap(ctx context.Context, in *OneEidTableAddDelMap) (*OneEidTableAddDelMapReply, error)
	OneEnableDisable(ctx context.Context, in *OneEnableDisable) (*OneEnableDisableReply, error)
	OneEnableDisablePetrMode(ctx context.Context, in *OneEnableDisablePetrMode) (*OneEnableDisablePetrModeReply, error)
	OneEnableDisablePitrMode(ctx context.Context, in *OneEnableDisablePitrMode) (*OneEnableDisablePitrModeReply, error)
	OneEnableDisableXtrMode(ctx context.Context, in *OneEnableDisableXtrMode) (*OneEnableDisableXtrModeReply, error)
	OneGetMapRequestItrRlocs(ctx context.Context, in *OneGetMapRequestItrRlocs) (*OneGetMapRequestItrRlocsReply, error)
	OneGetTransportProtocol(ctx context.Context, in *OneGetTransportProtocol) (*OneGetTransportProtocolReply, error)
	OneL2ArpBdGet(ctx context.Context, in *OneL2ArpBdGet) (*OneL2ArpBdGetReply, error)
	OneL2ArpEntriesGet(ctx context.Context, in *OneL2ArpEntriesGet) (*OneL2ArpEntriesGetReply, error)
	OneMapRegisterEnableDisable(ctx context.Context, in *OneMapRegisterEnableDisable) (*OneMapRegisterEnableDisableReply, error)
	OneMapRegisterFallbackThreshold(ctx context.Context, in *OneMapRegisterFallbackThreshold) (*OneMapRegisterFallbackThresholdReply, error)
	OneMapRegisterSetTTL(ctx context.Context, in *OneMapRegisterSetTTL) (*OneMapRegisterSetTTLReply, error)
	OneMapRequestMode(ctx context.Context, in *OneMapRequestMode) (*OneMapRequestModeReply, error)
	OneNdpBdGet(ctx context.Context, in *OneNdpBdGet) (*OneNdpBdGetReply, error)
	OneNdpEntriesGet(ctx context.Context, in *OneNdpEntriesGet) (*OneNdpEntriesGetReply, error)
	OneNshSetLocatorSet(ctx context.Context, in *OneNshSetLocatorSet) (*OneNshSetLocatorSetReply, error)
	OnePitrSetLocatorSet(ctx context.Context, in *OnePitrSetLocatorSet) (*OnePitrSetLocatorSetReply, error)
	OneRlocProbeEnableDisable(ctx context.Context, in *OneRlocProbeEnableDisable) (*OneRlocProbeEnableDisableReply, error)
	OneSetTransportProtocol(ctx context.Context, in *OneSetTransportProtocol) (*OneSetTransportProtocolReply, error)
	OneShowPetrMode(ctx context.Context, in *OneShowPetrMode) (*OneShowPetrModeReply, error)
	OneShowPitrMode(ctx context.Context, in *OneShowPitrMode) (*OneShowPitrModeReply, error)
	OneShowXtrMode(ctx context.Context, in *OneShowXtrMode) (*OneShowXtrModeReply, error)
	OneStatsEnableDisable(ctx context.Context, in *OneStatsEnableDisable) (*OneStatsEnableDisableReply, error)
	OneStatsFlush(ctx context.Context, in *OneStatsFlush) (*OneStatsFlushReply, error)
	OneUsePetr(ctx context.Context, in *OneUsePetr) (*OneUsePetrReply, error)
	ShowOneMapRegisterFallbackThreshold(ctx context.Context, in *ShowOneMapRegisterFallbackThreshold) (*ShowOneMapRegisterFallbackThresholdReply, error)
	ShowOneMapRegisterState(ctx context.Context, in *ShowOneMapRegisterState) (*ShowOneMapRegisterStateReply, error)
	ShowOneMapRegisterTTL(ctx context.Context, in *ShowOneMapRegisterTTL) (*ShowOneMapRegisterTTLReply, error)
	ShowOneMapRequestMode(ctx context.Context, in *ShowOneMapRequestMode) (*ShowOneMapRequestModeReply, error)
	ShowOneNshMapping(ctx context.Context, in *ShowOneNshMapping) (*ShowOneNshMappingReply, error)
	ShowOnePitr(ctx context.Context, in *ShowOnePitr) (*ShowOnePitrReply, error)
	ShowOneRlocProbeState(ctx context.Context, in *ShowOneRlocProbeState) (*ShowOneRlocProbeStateReply, error)
	ShowOneStatsEnableDisable(ctx context.Context, in *ShowOneStatsEnableDisable) (*ShowOneStatsEnableDisableReply, error)
	ShowOneStatus(ctx context.Context, in *ShowOneStatus) (*ShowOneStatusReply, error)
	ShowOneUsePetr(ctx context.Context, in *ShowOneUsePetr) (*ShowOneUsePetrReply, error)
}

type serviceClient struct {
	ch api.Channel
}

func NewServiceClient(ch api.Channel) RPCService {
	return &serviceClient{ch}
}

func (c *serviceClient) DumpOneEidTable(ctx context.Context, in *OneEidTableDump) (RPCService_DumpOneEidTableClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpOneEidTableClient{stream}
	return x, nil
}

type RPCService_DumpOneEidTableClient interface {
	Recv() (*OneEidTableDetails, error)
}

type serviceClient_DumpOneEidTableClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpOneEidTableClient) Recv() (*OneEidTableDetails, error) {
	m := new(OneEidTableDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpOneEidTableMap(ctx context.Context, in *OneEidTableMapDump) (RPCService_DumpOneEidTableMapClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpOneEidTableMapClient{stream}
	return x, nil
}

type RPCService_DumpOneEidTableMapClient interface {
	Recv() (*OneEidTableMapDetails, error)
}

type serviceClient_DumpOneEidTableMapClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpOneEidTableMapClient) Recv() (*OneEidTableMapDetails, error) {
	m := new(OneEidTableMapDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpOneEidTableVni(ctx context.Context, in *OneEidTableVniDump) (RPCService_DumpOneEidTableVniClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpOneEidTableVniClient{stream}
	return x, nil
}

type RPCService_DumpOneEidTableVniClient interface {
	Recv() (*OneEidTableVniDetails, error)
}

type serviceClient_DumpOneEidTableVniClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpOneEidTableVniClient) Recv() (*OneEidTableVniDetails, error) {
	m := new(OneEidTableVniDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpOneLocator(ctx context.Context, in *OneLocatorDump) (RPCService_DumpOneLocatorClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpOneLocatorClient{stream}
	return x, nil
}

type RPCService_DumpOneLocatorClient interface {
	Recv() (*OneLocatorDetails, error)
}

type serviceClient_DumpOneLocatorClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpOneLocatorClient) Recv() (*OneLocatorDetails, error) {
	m := new(OneLocatorDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpOneLocatorSet(ctx context.Context, in *OneLocatorSetDump) (RPCService_DumpOneLocatorSetClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpOneLocatorSetClient{stream}
	return x, nil
}

type RPCService_DumpOneLocatorSetClient interface {
	Recv() (*OneLocatorSetDetails, error)
}

type serviceClient_DumpOneLocatorSetClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpOneLocatorSetClient) Recv() (*OneLocatorSetDetails, error) {
	m := new(OneLocatorSetDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpOneMapResolver(ctx context.Context, in *OneMapResolverDump) (RPCService_DumpOneMapResolverClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpOneMapResolverClient{stream}
	return x, nil
}

type RPCService_DumpOneMapResolverClient interface {
	Recv() (*OneMapResolverDetails, error)
}

type serviceClient_DumpOneMapResolverClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpOneMapResolverClient) Recv() (*OneMapResolverDetails, error) {
	m := new(OneMapResolverDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpOneMapServer(ctx context.Context, in *OneMapServerDump) (RPCService_DumpOneMapServerClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpOneMapServerClient{stream}
	return x, nil
}

type RPCService_DumpOneMapServerClient interface {
	Recv() (*OneMapServerDetails, error)
}

type serviceClient_DumpOneMapServerClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpOneMapServerClient) Recv() (*OneMapServerDetails, error) {
	m := new(OneMapServerDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) DumpOneStats(ctx context.Context, in *OneStatsDump) (RPCService_DumpOneStatsClient, error) {
	stream := c.ch.SendMultiRequest(in)
	x := &serviceClient_DumpOneStatsClient{stream}
	return x, nil
}

type RPCService_DumpOneStatsClient interface {
	Recv() (*OneStatsDetails, error)
}

type serviceClient_DumpOneStatsClient struct {
	api.MultiRequestCtx
}

func (c *serviceClient_DumpOneStatsClient) Recv() (*OneStatsDetails, error) {
	m := new(OneStatsDetails)
	stop, err := c.MultiRequestCtx.ReceiveReply(m)
	if err != nil {
		return nil, err
	}
	if stop {
		return nil, io.EOF
	}
	return m, nil
}

func (c *serviceClient) OneAddDelAdjacency(ctx context.Context, in *OneAddDelAdjacency) (*OneAddDelAdjacencyReply, error) {
	out := new(OneAddDelAdjacencyReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneAddDelL2ArpEntry(ctx context.Context, in *OneAddDelL2ArpEntry) (*OneAddDelL2ArpEntryReply, error) {
	out := new(OneAddDelL2ArpEntryReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneAddDelLocalEid(ctx context.Context, in *OneAddDelLocalEid) (*OneAddDelLocalEidReply, error) {
	out := new(OneAddDelLocalEidReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneAddDelLocator(ctx context.Context, in *OneAddDelLocator) (*OneAddDelLocatorReply, error) {
	out := new(OneAddDelLocatorReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneAddDelLocatorSet(ctx context.Context, in *OneAddDelLocatorSet) (*OneAddDelLocatorSetReply, error) {
	out := new(OneAddDelLocatorSetReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneAddDelMapRequestItrRlocs(ctx context.Context, in *OneAddDelMapRequestItrRlocs) (*OneAddDelMapRequestItrRlocsReply, error) {
	out := new(OneAddDelMapRequestItrRlocsReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneAddDelMapResolver(ctx context.Context, in *OneAddDelMapResolver) (*OneAddDelMapResolverReply, error) {
	out := new(OneAddDelMapResolverReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneAddDelMapServer(ctx context.Context, in *OneAddDelMapServer) (*OneAddDelMapServerReply, error) {
	out := new(OneAddDelMapServerReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneAddDelNdpEntry(ctx context.Context, in *OneAddDelNdpEntry) (*OneAddDelNdpEntryReply, error) {
	out := new(OneAddDelNdpEntryReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneAddDelRemoteMapping(ctx context.Context, in *OneAddDelRemoteMapping) (*OneAddDelRemoteMappingReply, error) {
	out := new(OneAddDelRemoteMappingReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneAdjacenciesGet(ctx context.Context, in *OneAdjacenciesGet) (*OneAdjacenciesGetReply, error) {
	out := new(OneAdjacenciesGetReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneEidTableAddDelMap(ctx context.Context, in *OneEidTableAddDelMap) (*OneEidTableAddDelMapReply, error) {
	out := new(OneEidTableAddDelMapReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneEnableDisable(ctx context.Context, in *OneEnableDisable) (*OneEnableDisableReply, error) {
	out := new(OneEnableDisableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneEnableDisablePetrMode(ctx context.Context, in *OneEnableDisablePetrMode) (*OneEnableDisablePetrModeReply, error) {
	out := new(OneEnableDisablePetrModeReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneEnableDisablePitrMode(ctx context.Context, in *OneEnableDisablePitrMode) (*OneEnableDisablePitrModeReply, error) {
	out := new(OneEnableDisablePitrModeReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneEnableDisableXtrMode(ctx context.Context, in *OneEnableDisableXtrMode) (*OneEnableDisableXtrModeReply, error) {
	out := new(OneEnableDisableXtrModeReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneGetMapRequestItrRlocs(ctx context.Context, in *OneGetMapRequestItrRlocs) (*OneGetMapRequestItrRlocsReply, error) {
	out := new(OneGetMapRequestItrRlocsReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneGetTransportProtocol(ctx context.Context, in *OneGetTransportProtocol) (*OneGetTransportProtocolReply, error) {
	out := new(OneGetTransportProtocolReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneL2ArpBdGet(ctx context.Context, in *OneL2ArpBdGet) (*OneL2ArpBdGetReply, error) {
	out := new(OneL2ArpBdGetReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneL2ArpEntriesGet(ctx context.Context, in *OneL2ArpEntriesGet) (*OneL2ArpEntriesGetReply, error) {
	out := new(OneL2ArpEntriesGetReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneMapRegisterEnableDisable(ctx context.Context, in *OneMapRegisterEnableDisable) (*OneMapRegisterEnableDisableReply, error) {
	out := new(OneMapRegisterEnableDisableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneMapRegisterFallbackThreshold(ctx context.Context, in *OneMapRegisterFallbackThreshold) (*OneMapRegisterFallbackThresholdReply, error) {
	out := new(OneMapRegisterFallbackThresholdReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneMapRegisterSetTTL(ctx context.Context, in *OneMapRegisterSetTTL) (*OneMapRegisterSetTTLReply, error) {
	out := new(OneMapRegisterSetTTLReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneMapRequestMode(ctx context.Context, in *OneMapRequestMode) (*OneMapRequestModeReply, error) {
	out := new(OneMapRequestModeReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneNdpBdGet(ctx context.Context, in *OneNdpBdGet) (*OneNdpBdGetReply, error) {
	out := new(OneNdpBdGetReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneNdpEntriesGet(ctx context.Context, in *OneNdpEntriesGet) (*OneNdpEntriesGetReply, error) {
	out := new(OneNdpEntriesGetReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneNshSetLocatorSet(ctx context.Context, in *OneNshSetLocatorSet) (*OneNshSetLocatorSetReply, error) {
	out := new(OneNshSetLocatorSetReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OnePitrSetLocatorSet(ctx context.Context, in *OnePitrSetLocatorSet) (*OnePitrSetLocatorSetReply, error) {
	out := new(OnePitrSetLocatorSetReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneRlocProbeEnableDisable(ctx context.Context, in *OneRlocProbeEnableDisable) (*OneRlocProbeEnableDisableReply, error) {
	out := new(OneRlocProbeEnableDisableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneSetTransportProtocol(ctx context.Context, in *OneSetTransportProtocol) (*OneSetTransportProtocolReply, error) {
	out := new(OneSetTransportProtocolReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneShowPetrMode(ctx context.Context, in *OneShowPetrMode) (*OneShowPetrModeReply, error) {
	out := new(OneShowPetrModeReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneShowPitrMode(ctx context.Context, in *OneShowPitrMode) (*OneShowPitrModeReply, error) {
	out := new(OneShowPitrModeReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneShowXtrMode(ctx context.Context, in *OneShowXtrMode) (*OneShowXtrModeReply, error) {
	out := new(OneShowXtrModeReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneStatsEnableDisable(ctx context.Context, in *OneStatsEnableDisable) (*OneStatsEnableDisableReply, error) {
	out := new(OneStatsEnableDisableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneStatsFlush(ctx context.Context, in *OneStatsFlush) (*OneStatsFlushReply, error) {
	out := new(OneStatsFlushReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) OneUsePetr(ctx context.Context, in *OneUsePetr) (*OneUsePetrReply, error) {
	out := new(OneUsePetrReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ShowOneMapRegisterFallbackThreshold(ctx context.Context, in *ShowOneMapRegisterFallbackThreshold) (*ShowOneMapRegisterFallbackThresholdReply, error) {
	out := new(ShowOneMapRegisterFallbackThresholdReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ShowOneMapRegisterState(ctx context.Context, in *ShowOneMapRegisterState) (*ShowOneMapRegisterStateReply, error) {
	out := new(ShowOneMapRegisterStateReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ShowOneMapRegisterTTL(ctx context.Context, in *ShowOneMapRegisterTTL) (*ShowOneMapRegisterTTLReply, error) {
	out := new(ShowOneMapRegisterTTLReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ShowOneMapRequestMode(ctx context.Context, in *ShowOneMapRequestMode) (*ShowOneMapRequestModeReply, error) {
	out := new(ShowOneMapRequestModeReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ShowOneNshMapping(ctx context.Context, in *ShowOneNshMapping) (*ShowOneNshMappingReply, error) {
	out := new(ShowOneNshMappingReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ShowOnePitr(ctx context.Context, in *ShowOnePitr) (*ShowOnePitrReply, error) {
	out := new(ShowOnePitrReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ShowOneRlocProbeState(ctx context.Context, in *ShowOneRlocProbeState) (*ShowOneRlocProbeStateReply, error) {
	out := new(ShowOneRlocProbeStateReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ShowOneStatsEnableDisable(ctx context.Context, in *ShowOneStatsEnableDisable) (*ShowOneStatsEnableDisableReply, error) {
	out := new(ShowOneStatsEnableDisableReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ShowOneStatus(ctx context.Context, in *ShowOneStatus) (*ShowOneStatusReply, error) {
	out := new(ShowOneStatusReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) ShowOneUsePetr(ctx context.Context, in *ShowOneUsePetr) (*ShowOneUsePetrReply, error) {
	out := new(ShowOneUsePetrReply)
	err := c.ch.SendRequest(in).ReceiveReply(out)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion1 // please upgrade the GoVPP api package

// Reference imports to suppress errors if they are not otherwise used.
var _ = api.RegisterMessage
var _ = bytes.NewBuffer
var _ = context.Background
var _ = io.Copy
var _ = strconv.Itoa
var _ = struc.Pack
